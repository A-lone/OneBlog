<?xml version="1.0" encoding="utf-8"?>
<urlset>
  <url>
    <loc>http://www.datiancun.com/post/08a61b7a-d03b-4c4c-bad2-a7770036abbd</loc>
    <lastmod>2017-05-18</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>暴力遍历还没注册的双拼域名</title>
        <content>&lt;p&gt;最近突然发现双拼域名越来越少，价格也在不断上涨。想注册一个有趣的双拼域名玩玩，于是动手写了一个暴力查询双拼域名的工具。&lt;/p&gt;&lt;p&gt;思路比较简单，首先找到域名查询的接口，这些接口一般都会做策略防止暴力查询，这边我使用了2个接口作为容错。&lt;/p&gt;&lt;p&gt;aaw8：&lt;a href="http://www.aaw8.com/Api/DomainApi.aspx?domain=datiancun.com" _src="http://www.aaw8.com/Api/DomainApi.aspx?domain=datiancun.com"&gt;http://www.aaw8.com/Api/DomainApi.aspx?domain=datiancun.com&lt;/a&gt;&lt;/p&gt;&lt;pre class="brush:xml;toolbar:false"&gt;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;StateID:&amp;nbsp;0,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DomainName:&amp;nbsp;null,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Result:&amp;nbsp;null
}&lt;/pre&gt;&lt;p&gt;返回第一个参数为域名查询状态：&lt;br/&gt;0 表示查询接口出错&lt;br/&gt;1 表示网络异常&lt;br/&gt;200 表示接口返回成功&lt;br/&gt;210 表示域名可以注册&lt;br/&gt;211 表示域名已经注册&lt;br/&gt;212 表示域名参数传输错误&lt;br/&gt;213 查询超时&lt;br/&gt;&lt;/p&gt;&lt;p&gt;万网：&lt;a href="http://panda.www.net.cn/cgi-bin/check.cgi?area_domain=datiancun.com" _src="http://panda.www.net.cn/cgi-bin/check.cgi?area_domain=datiancun.com"&gt;http://panda.www.net.cn/cgi-bin/check.cgi?area_domain=datiancun.com&lt;/a&gt;&lt;/p&gt;&lt;pre class="brush:xml;toolbar:false"&gt;&amp;lt;?xml&amp;nbsp;version=&amp;quot;1.0&amp;quot;&amp;nbsp;encoding=&amp;quot;gb2312&amp;quot;?&amp;gt;
&amp;lt;property&amp;gt;
&amp;lt;returncode&amp;gt;200&amp;lt;/returncode&amp;gt;
&amp;lt;key&amp;gt;datiancun.com&amp;lt;/key&amp;gt;
&amp;lt;original&amp;gt;211&amp;nbsp;:&amp;nbsp;Domain&amp;nbsp;name&amp;nbsp;is&amp;nbsp;not&amp;nbsp;available&amp;lt;/original&amp;gt;
&amp;lt;/property&amp;gt;&lt;/pre&gt;&lt;p&gt;返回 XML 结果说明：&lt;br/&gt;returncode=200 表示接口返回成功&lt;br/&gt;key=***.com表示当前check的域名&lt;br/&gt;original=210 : Domain name is available&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 表示域名可以注册&lt;br/&gt;original=211 : Domain name is not available 表示域名已经注册&lt;br/&gt;original=212 : Domain name is invalid&amp;nbsp;&amp;nbsp; 表示域名参数传输错误&lt;br/&gt;original=213 : Time out 查询超时&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;有了接口之后一切都比较好办了，这时候需要一个拼音的单词表&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;string&amp;nbsp;CONST&amp;nbsp;=&amp;nbsp;@&amp;quot;a,ai,an,ang,ao,ba,bai,ban,bang,bao,bei,ben,beng,bi,bian,biao,bie,bin,bing,bo,bu,ca,cai,can,cang,cao,ce,cen,ceng,cha,chai,chan,chang,chao,che,chen,cheng,chi,chong,chou,chu,chuan,chuang,chui,chun,chuo,ci,cong,cou,cu,cuan,cui,cun,cuo,da,dai,dan,dang,dao,de,deng,di,dia,dian,diao,die,ding,diu,dong,dou,du,duan,dui,dun,duo,e,en,er,fa,fan,fang,fei,fen,feng,fo,fou,fu,ga,gai,gan,gang,gao,ge,gei,gen,geng,gong,gou,gu,gua,guai,guan,guang,gui,gun,guo,ha,hai,han,hang,hao,he,hei,hen,heng,hong,hou,hu,hua,huai,huan,huang,hui,hun,huo,ji,jia,jian,jiang,jiao,jie,jin,jing,jiong,jiu,ju,juan,jue,ka,kai,kan,kang,kao,ke,ken,keng,kong,kou,ku,kua,kuai,kuan,kuang,kui,kun,kuo,la,lai,lan,lang,lao,le,lei,leng,li,lia,lian,liang,liao,lie,lin,ling,liu,lo,long,lou,lu,luan,lun,luo,lv,ma,mai,man,mang,mao,me,mei,men,meng,mi,mian,miao,mie,min,ming,miu,mo,mou,mu,na,nai,nan,nang,nao,ne,nei,nen,neng,ni,nian,niang,niao,nie,nin,ning,niu,nong,nou,nu,nuan,nuo,nv,o,ou,pa,pai,pan,pang,pao,pei,pen,peng,pi,pian,piao,pie,pin,ping,po,pou,pu,qi,qia,qian,qiang,qiao,qie,qin,qing,qiong,qiu,qu,quan,que,qun,ran,rang,rao,re,ren,reng,ri,rong,rou,ru,ruan,rui,run,ruo,sa,sai,san,sang,sao,se,sen,seng,sha,shai,shan,shang,shao,she,shen,sheng,shi,shou,shu,shua,shuai,shuan,shuang,shui,shun,shuo,si,song,sou,su,suan,sui,sun,suo,ta,tai,tan,tang,tao,te,teng,ti,tian,tiao,tie,ting,tong,tou,tu,tuan,tui,tun,tuo,wa,wai,wan,wang,wei,wen,weng,wo,wu,xi,xia,xian,xiang,xiao,xie,xin,xing,xiong,xiu,xu,xuan,xue,xun,ya,yan,yang,yao,ye,yi,yin,ying,yo,yong,you,yu,yuan,yue,yun,za,zai,zan,zang,zao,ze,zei,zen,zeng,zha,zhai,zhan,zhang,zhao,zhe,zhen,zheng,zhi,zhong,zhou,zhu,zhua,zhuai,zhuan,zhuang,zhui,zhun,zhuo,zi,zong,zou,zu,zuan,zui,zun,zuo&amp;quot;;&lt;/pre&gt;&lt;p&gt;通过遍历单词表来查询双拼域名，再请求相应的服务即可&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient&amp;nbsp;client&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HttpClient();
&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;response&amp;nbsp;=&amp;nbsp;await&amp;nbsp;client.GetAsync(url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;response.Content.ReadAsStringAsync();
&amp;nbsp;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;resolve(result);&lt;/pre&gt;&lt;p&gt;需要说明的是aaw8的接口比较挫，返回的是html 包装的json....&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/b2dc959a-0d54-4be8-9465-a777003659a8.png" title="" alt=""/&gt;&lt;/p&gt;&lt;p&gt;需要正则把body里面的部分给截取出来&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;string&amp;nbsp;ReadHtmlToEditHtml(string&amp;nbsp;htmlContent1)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Regex&amp;nbsp;reg&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Regex(&amp;quot;(?is)&amp;lt;body[^&amp;gt;]*&amp;gt;(?&amp;lt;body&amp;gt;.*?)&amp;lt;/body&amp;gt;&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;bodyHtml&amp;nbsp;=&amp;nbsp;&amp;quot;&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bodyHtml&amp;nbsp;=&amp;nbsp;reg.Match(htmlContent1).Groups[&amp;quot;body&amp;quot;].Value;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;bodyHtml;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p&gt;剩下来的就是写个返回数据解析了，为了防止查询过的域名再查询一遍浪费时间，我简单做了下本地cache，完整的代码如下&lt;br/&gt;&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;async&amp;nbsp;Task&amp;lt;ResultModel&amp;gt;&amp;nbsp;FindDomain(string&amp;nbsp;entity)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String&amp;nbsp;filePath&amp;nbsp;=&amp;nbsp;&amp;quot;D:\\cache\\&amp;quot;&amp;nbsp;+&amp;nbsp;md5(url)&amp;nbsp;+&amp;nbsp;&amp;quot;_com.txt&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;fileContents&amp;nbsp;=&amp;nbsp;&amp;quot;&amp;quot;;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(File.Exists(filePath))
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fileContents&amp;nbsp;=&amp;nbsp;File.ReadAllText(filePath);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient&amp;nbsp;client&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HttpClient()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;response&amp;nbsp;=&amp;nbsp;await&amp;nbsp;client.GetAsync(url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;result&amp;nbsp;=&amp;nbsp;await&amp;nbsp;response.Content.ReadAsStringAsync();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result&amp;nbsp;=&amp;nbsp;resolve(result);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fileContents&amp;nbsp;=&amp;nbsp;result;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bool&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;JsonConvert.DeserializeObject(fileContents);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;File.WriteAllText(filePath,&amp;nbsp;fileContents);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch&amp;nbsp;(Exception&amp;nbsp;ex)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;flag&amp;nbsp;=&amp;nbsp;false;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;obj&amp;nbsp;=&amp;nbsp;(ResultModel)Newtonsoft.Json.JsonConvert.DeserializeObject(fileContents,&amp;nbsp;typeof(ResultModel));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;obj;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</content>
        <tag />
        <pubTime>2017-05-18T10:50:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/d35b4c6b-eb4b-475a-b07d-a77700369623.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/81cdca13-f5a3-48c1-a2a6-a76900c9e44f</loc>
    <lastmod>2017-05-04</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>谷歌表示Surface Laptop难以撼动Chromebook在教育市场的地位，你怎么看？</title>
        <content>&lt;p style="text-align: left;"&gt;5月4日讯，微软在前天晚上召开的发布会上，正式推出了针对教育市场的Win10 S系统以及搭载这款系统的全新笔记本Surface Laptop，微软称Surface Laptop针对教育市场，主打学生群体，因此相比家族其他的Surface产品，售价也会相对更“便宜”一点。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/44e41adc-cc07-421b-8767-a76900cce75c.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;在Surface Laptop发布之前，谷歌自家的Chromebook笔记本因其出色的便携能力、易用性就在教育市场占据了一定的地位，面对微软发布的Surface Laptop笔电，谷歌似乎对此并不在意。&lt;/p&gt;&lt;p style="text-align: left;"&gt;日前，谷歌公司一位高管在接受《Business Insider》采访时表示，微软的这次Surface Laptop发布会不过只是一场“试验”，不足为惧。&lt;/p&gt;&lt;blockquote style="text-align: left;"&gt;&lt;p style="text-align: left;"&gt;谷歌副总裁兼G Suite应用主管Prabhakar Raghavan对Business Insider表示，“Windows 10 S和微软的整体策略只是重复来证明Google在计算机上早已经做了正确的事情。我很高兴看我们采取的策略所得到验证，教育机构的需求确实是很简单的”。&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/f7249a46-05fc-4870-b65e-a76900c9cb43.jpg" width="640" height="427" border="0" vspace="0" title="" alt="" style="width: 640px; height: 427px;"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;Surface Laptop并没有采用拆卸平板电脑设计，而是经典的笔记本设计，但Surface Laptop设计依旧非常出色，其独特的配色也会吸引不少年轻人的目光。&lt;/p&gt;&lt;p style="text-align: left;"&gt;Surface Laptop该设备的售价为999美元，预计上市后折合人民币7000左右，相比Chromebook的产品，甚至贵了两到三倍，估计这就是谷歌高管如此自信的原因所在吧！&lt;/p&gt;&lt;p style="text-align: left;"&gt;你对微软这场教育市场之争怎么看？欢迎留言讨论~&lt;/p&gt;&lt;p&gt;&lt;br style="text-align: left;"/&gt;&lt;/p&gt;</content>
        <tag>Windows</tag>
        <pubTime>2017-05-04T08:10:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/51a24a09-2f72-426e-bd74-a76900c9dfc1.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/fc241275-adf8-49d9-ad32-a758011c26de</loc>
    <lastmod>2017-04-18</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>Windows 10 Mobile 美&amp;英两国市场份额略回暖</title>
        <content>&lt;p style="text-align: left;"&gt;根据外媒Kantar的统计，2016年Q3期间，Windows 10 Mobile&amp;nbsp;在美国市场份额下滑到1%以下，然而，Kantar统计的2017年2月近三个月统计数据显示，Windows 10 Mobile&amp;nbsp;在美国的市场份额恢复到了1.7%，这是非常意想不到的结果。&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://cdn.datiancun.com/f014c197-76af-4675-a625-a758011bd53f.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;Kantar的最新报告还强调了苹果iOS在美国和英国市场份额显着增长，分别上升到42%和42.3%。iPhone&amp;nbsp;7和iPhone 7 Plus仍然是美国最畅销的智能手机之一。 随着MWC 2017开幕，最近推出的Android旗舰产品可能会在未来几个月内改变力平衡，比较突出的是三星Galaxy S8/S8+。&lt;/p&gt;&lt;p style="text-align: left;"&gt;Windows 10 Mobile在未来几个月内是否能在美国市场继续维持1%以上的市场份额还有待观察，微软上周宣布，Windows 10 Mobile创意者更新不会推送给旧款的Lumia手机，这个结果对于Windows 10 Mobile用户来说确实不是一个好消息，不知道微软是否会在今年发布Surface Phone，就让我们拭目以待吧~&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/9e3a9944-5440-4346-8b8f-a758011bd823.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;br/&gt;&lt;/p&gt;</content>
        <tag>Windows</tag>
        <pubTime>2017-04-18T01:08:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/684a34cb-ade8-4f7a-9b37-a758011c1fb7.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/a43e61f8-3020-406e-ab2d-a7470080a188</loc>
    <lastmod>2017-03-31</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>Windows 10 创意者更新七大变化抢先看</title>
        <content>&lt;p style="text-align: left;"&gt;今年4月微软会发布创意者更新（Creators Update）。它将是微软Windows 10今年两个重大更新版之一。&lt;/p&gt;&lt;p style="text-align: left;"&gt;不要太在意“创意者更新”这个名称，其实除了一些虚拟现实功能和创作3D内容的一款小应用程序外，该版本与内容创作没多大关系。该更新主要是操作系统本身的一些重大的变化。你将在Windows更新方面拥有更大的控制权、Edge浏览器改进、一些非常不错的界面调整(包括开始菜单)及更多其他方面的内容。&lt;/p&gt;&lt;p style="text-align: left;"&gt;自去年8月以来，微软就一直在发布创意者的预览版；随着这款操作系统最终发布日期日益临近，每次更新都能发现Bug越来越少、功能也更加丰富了，本文将给大家介绍创意者更新带来的七大改变。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;一、更加自如地控制Windows更新&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;首先，创意者更新发布后，Windows决定进行更新时，你将不再突然受到干扰。&lt;/p&gt;&lt;p style="text-align: left;"&gt;创意者更新将包括一项功能：提醒何时有更新版，让你可以选择立即安装、选择特定的时间安装或者通过点击“Snooze”来推迟安装。这项功能还没有包括在任何公共预览更新版中，不过微软在博客中有所描述，详见&lt;a href="https://blogs.windows.com/windowsexperience/2017/03/01/providing-customers-choice-control-creators-update/" target="_blank"&gt;https://blogs.windows.com/windowsexperience/2017/03/01/providing-customers-choice-control-creators-update/&lt;/a&gt;。&lt;/p&gt;&lt;p style="text-align: left;"&gt;当有新的更新后，Windows会弹出通知，你可以选择立即安装、选择特定的时间安装还是通过点击“Snooze”来推迟安装。Snooze意味着更新版三天内不会安装。之后，你会接到关于更新版的另一则通知，可以再次点击Snooze按钮。这样一来，就能够无限期地推迟更新。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/8a0aebfc-e74e-4038-bf85-a747008501ba.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;如果用户使用Windows专业版、Windows企业版或Windows教育版，会有更多的选项，每月累积的更新可自动推迟长达30天。而为Windows添加新功能特性的更新可推迟长达365天(目前，对Windows专业版、Windows企业版或Windows教育版的用户而言，这些更新可以推迟180天。)&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;二、开始菜单界面优化和改进&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;创意者更新会对整个Windows界面作一些有用的改变，包括改变开始菜单。别指望有显著的改观。实际上，在平常使用时，你根本不会注意到差异。&lt;/p&gt;&lt;p style="text-align: left;"&gt;经常使用开始菜单的人会欢迎其中一个变化：让你可以将多个应用程序的平铺磁贴放入到文件夹。文件夹看起来如同平铺磁贴，显示里面每个平铺磁贴的小图标。点击任何文件夹即可打开它，所有应用程序都以一个个平铺窗格的形式出现。再次点击文件夹，所有平铺磁贴都会缩回到文件夹里面。这不失为清理开始菜单的好办法。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/2e8552d1-0769-43e9-9527-a74700850203.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;点击文件夹即可显示它含有的所有平铺磁贴，然后点击任何平铺磁贴，即可运行相应的应用程序。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;三、Edge浏览器的改进&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;Edge浏览器改进是创意者更新中最重要的一块，微软在竭力打造一款能与Chrome竞争的浏览器。&lt;/p&gt;&lt;p style="text-align: left;"&gt;讨厌Flash的那些人会从创意者收到一份很好的礼物：默认情况下，Flash内容在Edge中将被禁用――你可以选择要不要运行它。(在目前版本的Edge中，只有像广告这些没有必要的Flash内容才被拦截)。这有望提升安全和性能，另外延长电池使用时间。在网站还使用HTML5来提供多媒体内容的情况下，Edge将使用HTML5而不是Flash。此外，可以告诉Edge记住你在每个网站上的Flash偏好。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/16403e75-9b18-49ac-b5f0-a74700850236.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;现在微软Edge在默认情况下拦截Flash内容。&lt;/p&gt;&lt;p style="text-align: left;"&gt;另一项新功能：Edge让你可以读取使用ePub和PDF格式的内容。它能够将文本大声地读出来。微软还对浏览器进行了一大批底层的安全改进。&lt;/p&gt;&lt;p style="text-align: left;"&gt;Edge还将推出一些很好的标签页处理功能。点击屏幕顶部添加标签页按钮右边的向下箭头，会看到每个打开的标签页的缩略图。如果想切换到哪个标签页，只要点击相应的缩略图，就能进入到该标签页。如果不再想使用打开的标签页，但是以后想重新访问，点击右边的按钮，将它们列入一个群组。如果你想再次打开该群组，点击该群组左边的按钮，它们都会打开。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/4131b244-388f-49ff-a176-a7470085027d.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;微软Edge将包括一些有用的、新的标签页处理功能，包括能够查看所有打开标签页的缩略图。&lt;/p&gt;&lt;p style="text-align: left;"&gt;目前尚不清楚创意者更新会不会解决Edge的最大缺点之一：扩展数量不足的问题。目前可用的扩展数量不到三十个。微软官方微博声称，该公司已为开发人员发布了更多的扩展API，公司正努力开发更多的扩展。不过考虑到目前的扩展屈指可数，等到创意者发布时，不太可能会有大量的新扩展可供使用。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;四、全新的Windows Defender&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;Windows Defender是Windows的反恶意软件保护工具，当前版本的Windows界面还是传统的Desktop应用的感觉，给人的感觉和Windows不是一体的，而在Windows 10 创意者更新中，这种情况将有所变化。&lt;/p&gt;&lt;p style="text-align: left;"&gt;Windows Defender及相关的安全应用程序会获得一个新的一体化安全仪表板，名为Windows Defender安全中心，可从Settings &amp;gt; Update &amp;amp; Security &amp;gt; Windows Defender &amp;gt; Open Windows Center安全中心获得。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/88480aac-a559-4edd-907b-a747008502b4.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;Windows Defender安全中心是 Windows 10新的安全仪表板。&lt;/p&gt;&lt;p style="text-align: left;"&gt;它不仅仅是Windows Defender的仪表板，还是确保设备的安全和总体健康的指挥中心。它让你可以浏览任何潜在问题，深入研究可定制的设置。仪表板上任何图标旁边的勾号意味着一切很安全。里面有白色X的红圈意味着，需要采取措施来保护自己。&lt;/p&gt;&lt;p style="text-align: left;"&gt;仪表板有五个部分：&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;病毒和威胁防护&lt;/strong&gt;。这显示了反恶意软件工具的状态。它不仅与Windows Defender兼容，还与第三方反恶意软件程序兼容。如果你使用Windows Defender，可以点击图标，查看扫描结果，并定制反恶意软件的防护机制。如果你使用不同的反恶意软件软件包，点击图标就会启动该应用软件。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;设备性能和健康&lt;/strong&gt;。点击它即可查看最新的Windows更新版，以及存储、设备驱动程序或电池是否有问题。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;防火墙和网络保护&lt;/strong&gt;。这显示了防火墙设置，让你可以更改设置。它还提供了网络连接方面的信息以及网络故障排查工具链接。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;应用程序和浏览器控制&lt;/strong&gt;。这控制着SmartScreen Filter，它可以拦截网上可能危险的应用程序和文件，并在使用Edge浏览器时拦截恶意网站。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;家长控制选项&lt;/strong&gt;。提供家长控制功能。&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;五、3D和游戏功能&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;创意者更新将提供新的3D和游戏功能。Xbox用户能够将游戏会话流式传输至游戏机。还有一种游戏模式，你在玩游戏时可最大限度地提升系统性能。此外，还有一个游戏工具栏，让你可以记录游戏玩法，并拍摄屏幕截图。Settings中还有整个部分是专门针对游戏的，让你可以控制游戏工具栏和游戏模式。&lt;/p&gt;&lt;p style="text-align: left;"&gt;至于3D，会有一款Paint 3D应用程序，可用于创作3D内容。还会支持虚拟现实和增强现实应用程序。新版本发布时，预计硬件厂商会发布Windows 10虚拟现实头戴设备。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;六、Cortana的更新&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;预计Cortana方面会增添一些功能。将来能够安排每月提醒。Cortana将与Windows 10环境整合起来，那样你可以询问该数字助理，以便安装设备时寻求帮助。预计Cortana可识别新的语音命令，包括重启PC、关闭PC、调高或调低系统音量。还能在全屏模式下使用它。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;七、其他功能变化&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;还有一些其他小的细节改变&lt;/p&gt;&lt;p style="text-align: left;"&gt;比如之前你要为Windows添加新设备(无论是蓝牙、无线还是有线)的屏幕感到过困惑，知道如今在Settings应用程序中有个Devices标题会很高兴，它提供了增添任何设备的统一界面。只需选择Settings &amp;gt; Device &amp;gt; Add a device。终于有了一个统一的位置能够添加所有的设备。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/98588c98-7edc-427b-928d-a747008502eb.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;新增了能够消除电脑屏幕蓝光的“Night Light”功能。有证据表明，蓝光会干扰正常的睡眠周期，所以这项功能可以帮助喜欢在晚上使用电脑的夜猫子。&lt;/p&gt;&lt;p style="text-align: left;"&gt;你还能够阻止安装桌面应用程序，只允许Windows应用程序从微软商店安装的为触摸操作优化的应用程序。乍一看，这似乎是奇怪的功能――为何禁止整个类别的应用程序？但如果你不想让臃肿软件安装在电脑上，这将很有用，因为那些程序通常是作为桌面应用程序而编写的。&lt;/p&gt;&lt;p style="text-align: left;"&gt;此外，在创意者更新安装过程中，系统会提醒你设置各项隐私设置，包括微软是否可以收集内容、向你显示针对性广告、定位设置是否启用，以及其他选项。当然以后还可以在Settings的Privacy部分更改这些设置。&lt;/p&gt;&lt;p style="text-align: left;"&gt;创意者更新将是Windows 10发布以来最大的更新之一，有许多功能值得期待，让我们一起等待4月创意者更新发布吧。&lt;/p&gt;&lt;p&gt;&lt;br style="text-align: left;"/&gt;&lt;/p&gt;</content>
        <tag>Windows</tag>
        <pubTime>2017-03-31T03:33:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/0def875a-03d6-400b-8ac9-a74700809449.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/bc391fdd-b315-4621-a4f2-a746002732d6</loc>
    <lastmod>2017-03-30</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>三星Galaxy S8/S8+抢先看</title>
        <content>&lt;p&gt;星Galaxy S8是玻璃、金属和一块巨大屏幕的美丽结合，但三星却将这一切塞进了一个比你所期望要小得多的机身之中，是我至今摸过的最棒的智能手机。但也许在今年，仅凭这点也许并不足以让Galaxy S8出众。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/f69bc96c-4dd4-46cc-abda-a74600270c68.jpg"/&gt;&lt;/p&gt;&lt;p&gt;硬件&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/d2d8bd55-ded8-4d5f-81e1-a74600270e73.jpg"/&gt;&lt;/p&gt;&lt;p&gt;Galaxy S8分为两个版本，标准的5.8英寸屏幕的Galaxy S8以及6.2英寸的Galaxy S8+。二者都将会在3月30开始预订，并最终于4月21日正式上市。至于价格，则取决于你选择的运营商——但想必这两台机器不会便宜。早前的传闻称这款手机将会以720美金的起售价和我们见面。&lt;/p&gt;&lt;p&gt;也许是因为在过去的一段时间之中这款手机的爆料实在太多太详细，所以我手里拿着S8的时候并没有感觉特别惊喜。这款手机上最大的特点自然是在每台手机上都十分重要的东西：屏幕。Galaxy S8上面，这块屏幕向上下延展，几乎覆盖了整个机身正面。同时在屏幕左右侧我们也见到了一如既往的曲面设定，三星称之为“Infinity Display”，因为其给人以整机完全没有边框的错觉。而既然谈到曲线，屏幕的四角都是圆角，使得这块屏幕看上去更加优雅，并且也许更加耐操。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/1d4017af-25e2-4f6b-8754-a746002710b6.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/d8374419-a5c1-48e0-bb85-a746002711da.jpg"/&gt;&lt;/p&gt;&lt;p&gt;Galaxy S8系列兑现了三星在小机身中塞下大屏幕的诺言，并且和其他大屏机器比起来还要稍微更好用些。在Galaxy S8上面，我并没有碰到如同Galaxy S7 edge上面的那种误触现象。但说实话我只摸了这机器一个小时左右，难保这问题依旧存在。&lt;/p&gt;&lt;p&gt;比起其他东西都要重要的事实是，Galaxy S8很棒。这两款手机看上去虽然像是三星在2017年的筹码， 但这两款机器却设计得极其出色。这两台机器上没有任何异物，除了那个几乎可以忽略的相机凸起之外，并且一切元素都被以低于毫米级别的精确度来打造。这机器无可避免地在某种程度上显得有些无趣，不少设计特性自然也是S7系列和Note7的正常演化，但却以柏拉图般的标准被完善。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/f2d44edb-330c-4414-bd4b-a746002713f0.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/32768b7a-e6df-4798-a4a4-a7460027159a.jpg"/&gt;&lt;/p&gt;&lt;p&gt;将屏幕延伸到接近机身的底部，也就意味着S8上面不再有给三星传统的硬件按钮留下空间。所以S8两兄弟上面用上了三星的新屏幕内部导航按钮，正如其他Android手机一般。但Galaxy S8系列也加入了类似于iPhone的振动反馈，以给用户模拟按下物理按钮的手感。虽然这种触觉反馈只在HOME按钮上有效就是啦。不过在某些隐藏了导航栏的场景之中，你只需要用力按下HOME按钮的位置，便可以直接触发HOME按钮，而不用额外手势调出。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/9f32a4ae-4212-4af2-960a-a74600271725.jpg"/&gt;&lt;/p&gt;&lt;p&gt;取消掉物理按钮也就意味着三星必须将指纹识别模块移动到机身背面，相机模组的旁边。对于指纹识别模块来说，这并不是个特别好的地方，因为对于正常握姿来说有点太高以至于不能舒服地够着，并且由于指纹识别模块在相机镜头旁边，所以你也是有几率把自己的指纹留在相机镜头上的哦。&lt;/p&gt;&lt;p&gt;既然说到指纹，三星Galaxy S8由于全金属机身的关系，所以日常使用之中指纹肯定是少不了的。但它们肯定不会如你想象之中那么严重（举个例子来说，LG G6的指纹污渍问题比Galaxy S8严重得多）。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/a322821a-28c8-4cb4-b041-a74600271821.jpg"/&gt;&lt;/p&gt;&lt;p&gt;USB-C和3.5mm耳机接口（哈利路亚！）都位于机身底部。机身的音量按钮和电源按钮分居于机身两侧，在音量按钮下方你还能发现一个三星专门用来开启全新的Bixby语音助手的物理按钮。给这个功能专门搞一个物理按钮，也就意味着三星对于这个语音助手有着不小的期望。但若是Bixby令人失望的话，应该会有不少人寻求让这颗物理按钮发挥更大价值的方法吧。&lt;/p&gt;&lt;p&gt;规格&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/e6ad4bd9-eb61-404e-b12c-a746002719d4.jpg"/&gt;&lt;/p&gt;&lt;p&gt;正如你所料的，Galaxy S8拥有目前地表智能手机上最优秀的规格。取决于发售地区，Galaxy S8将会配备高通骁龙835处理器或是三星自己的Exynos处理器。这两款处理器均为10nm工艺，所以理论上来说都会更加节能。在简短的上手中，Galaxy S8反应迅速。希望三星Galaxy S8能够长久地流畅下去——对于三星手机来说可是个不小的要求哦。&lt;/p&gt;&lt;p&gt;也许是因为Note7的原因，三星本次在电池容量上一点都不激进。三星Galaxy S8拥有3000毫安时的电池，Galaxy S8+的电池容量则是3500毫安时。虽然容量听起来不小，但想到屏幕更大这一点，这电池容量还是有点让人发虚。不过三星一再强调自己改善了电池的化学成分，以保证电池在一两年的使用之后更加持久。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/bc6f4e51-8e8f-4f45-8444-a74600271d6a.jpg"/&gt;&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/bc6f4e51-8e8f-4f45-8444-a74600271d6a.jpg"/&gt;&lt;/p&gt;&lt;p&gt;除了电池容量之外，三星另一个没有十分激进的方面落在了相机规格上面。Galaxy S8用了和Galaxy S7完全相同的后置相机模组，1200万像素传感器搭配光学防抖镜组。三星说自己在软件方面下了不少功夫来改善画质表现，从上手体验来说S8的相机的速度表现会比S7 edge明显好不少。&lt;/p&gt;&lt;p&gt;并且值得注意的是，Galaxy S8+的相机规格和S8并无二样，除了屏幕尺寸和电池容量之外，两台手机几乎是一模一样的。&lt;/p&gt;&lt;p&gt;S8的前置相机则是有升级的，换用了800万像素的传感器并且支持自动对焦。在前后相机之间切换非常迅速且简单，左右滑动还能找到三星的一些自拍炫技特性。不得不说某些特性给人感觉还是挺不错的，我个人特别喜欢GIF模式——尽管从我个人角度出发，还是觉得苹果的Live Photo那种实现方式更好吧。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/f0308a15-6795-48ee-9d08-a7460027236c.jpg"/&gt;&lt;/p&gt;&lt;p&gt;从任何角度来说，“最强拍照智能手机”的竞争比起几年前只有三星苹果两家争霸的场面着实要有趣得多了。如今苹果、LG都转投了双摄设定，而谷歌的Pixel更是像一匹不知从哪儿冒出来的黑马。现在钦定Galaxy S8在拍照上止步不前其实还有些为时过早，但从硬件配置上来说，三星的竞争对手们可以松一口气了。&lt;/p&gt;&lt;p&gt;Bixby&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/9000aa99-1237-42e3-84a7-a7460027245c.jpg"/&gt;&lt;/p&gt;&lt;p&gt;Bixby是三星本次引入的新智能个人助理软件，它大致分为三种运行模式：&lt;/p&gt;&lt;p&gt;1、短按按钮，开启Bixby的主页（也可以从主页上向右滑动调出）；&lt;/p&gt;&lt;p&gt;2、长按按钮，开启Bixby的语音功能；&lt;/p&gt;&lt;p&gt;3、相机应用里头，有个小按钮开启Bixby的AR功能。&lt;/p&gt;&lt;p&gt;我们从第二个模式开始吧，因为和Bixby谈笑风生是最有趣并且最有挑战性的。总的来说，三星本次是希望做出一种新的虚拟助手，那种可以直接帮你操作手机的语音助手，而非那种只能够回答云端存储的问题的玩意。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/3471f499-7ec9-476d-8013-a74600272557.jpg"/&gt;&lt;/p&gt;&lt;p&gt;不幸的，我并没有能够亲身测试，但三星确实也准备了几个demo。在其中一个demo之中，你可以开启图库app并且要求Bixby编辑这张图片，而非如同以往一样在各种菜单和界面之中大海捞针。诸如“Bixby，把这张图向左旋转”和“Bixby，把这张图片发送给Dan”的语音指令都是可以被执行的。若是你有钱到配齐一整套的三星智能家电，你甚至可以用Bixby来将视频发送至电视播放，或是关闭你的三星智能电灯。&lt;/p&gt;&lt;p&gt;Bixby的目标是“你能够用触摸操作的东西，也要做到可以语音控制”。这是一个值得赞美的目标，但我却严重怀疑三星是否能够实现。别的不说，目前Bixby只能够在大约10个三星的app之中运转，并且它也只能够在已经支持Bixby的app上运行。和谷歌的Now On Tap不一样，Bixby并不会阅读屏幕内容并且猜测屏幕上是什么。所以Bixby也许是个虚拟助手，但距离人工智能却还有点距离。&lt;/p&gt;&lt;p&gt;另外一个大问题是Bixby究竟和Google Assistant有啥不同。看上去很简单，但不久之后你会发现二者有不少功能重叠。举例来说，你可以使用Bixby设定闹钟，Bixby也有由一堆随机信息卡片组成的主页。Bixby看上去就如同每一个小部件屏幕，看上去有些混乱并且也许在新鲜感过去之后你也就再也不愿意用它了。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/132de9c2-06f0-4116-86ed-a746002725f3.jpg"/&gt;&lt;/p&gt;&lt;p&gt;最后但最值得一提的，是Bixby在相机之中的集成。这个功能能够让你的相机成为图片搜索引擎，将Bixby相机直接对准任意物体，Bixby就会识别物体并且进行搜索。我试着将相机对准花朵，然后Bixby就弹出了在亚马逊购买花卉的选项或是在Pinterest上观看更多花卉图片的入口。它还没有厉害到能够识别到我的Android Wear手表的品牌，但至少Bixby能够识别出来这是块手表，并且弹出Amazon购买手表的入口。&lt;/p&gt;&lt;p&gt;这个图像识别自然能耐不仅于此，三星的demo之中Bixby甚至能够识别酒类的标签和书本封面，并且弹出购买链接。三星表示自己正在和诸如亚马逊、Pinterest这样的合作伙伴合作，至于谷歌大大，三星Bixby却似乎没能勾搭上。完全意料之中。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</content>
        <tag>Galaxy</tag>
        <pubTime>2017-03-30T10:19:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/b6de38ed-3401-467f-9197-a7460026ce35.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/8263392f-022b-4db8-aaf6-a742010a784b</loc>
    <lastmod>2017-03-26</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>爱奇艺、优酷、腾讯视频...等视频网站VIP内容免费看</title>
        <content>&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;很多视频网站都是需要VIP会员才能看的 比如爱奇艺、优酷、腾讯视频...&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;a href="http://www.datiancun.com/tools/videofetch" target="_self"&gt;大田村&lt;/a&gt;现在就教你只需要一台电脑或一个手机，就可以享受各大视频网站的VIP服务， 看VIP视频电影不用广告！&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;首先打开&lt;a href="http://www.datiancun.com/tools/videofetch" target="_blank"&gt;http://www.datiancun.com/tools/videofetch&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src="http://cdn.datiancun.com/d93e0587-cc1f-4a60-b2a9-a742010a39ca.png" title="" alt="" width="600" height="261" border="0" vspace="0" style="width: 600px; height: 261px;"/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;这时候就可以到各大视频网站，这里以爱奇艺为例，教大家如何免费查看&lt;a href="http://so.iqiyi.com/so/q_%E6%97%A0%E9%97%B4%E9%81%933?source=input&amp;sr=1213781035995" target="_blank"&gt;无间道3&lt;/a&gt;的资源，首先搜索无间道3如下图所示。&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/fdc37b9f-67f7-46c4-94cf-a742010a3a91.png" title="" alt="" width="600" height="265" border="0" vspace="0" style="width: 600px; height: 265px;"/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;鼠标右键选择第五集，点击“复制链接地址(&lt;span style="text-decoration: underline;"&gt;E&lt;/span&gt;)”&lt;br/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;img src="http://cdn.datiancun.com/bfc42d5a-527c-4eb2-9098-a742010a3d85.png" title="" alt="" width="600" height="365" border="0" vspace="0" style="width: 600px; height: 365px;"/&gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;回到大田村，输入复制的地址点击“获取下载地址”这就样就好了，没有任何限制，也没有广告，还是高清的！&lt;/p&gt;&lt;p&gt;&lt;img src="http://cdn.datiancun.com/903bc55f-5d7b-47ba-a3ef-a742010a4147.png" title="" alt="" width="600" height="303" border="0" vspace="0" style="width: 600px; height: 303px;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;span style="color: rgb(255, 0, 0);"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PS：接口随时可能会被封，遇到链接无法获取下载地址的情况，可在下方留言。&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;</content>
        <tag />
        <pubTime>2017-03-26T11:56:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/a15e5d04-9662-45df-9854-a742010a66fa.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/df4988b7-58d6-40f3-9c36-a74a0092ce59</loc>
    <lastmod>2017-03-03</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>.NET开发人员必备工具推荐</title>
        <content>&lt;p style="text-align: left;"&gt;如果你是一名.NET程序员，不妨来看看本文推荐的这些工具吧。灵活搭配并使用它们，或许可以给你带来意想不到的收获。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;主要工具&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.visualstudio.com/" target="_blank"&gt;Visual Studio&lt;/a&gt;——最好用的IDE没有之一，.NET开发者的必备IDE。Visual Studio提供非常强大的启动工具箱，并且还有一些让人惊喜的插件支持。在去年11月，微软发布了Visual Studio 2013社区版，免费提供给学生、开源贡献者及初创企业使用。每一次版本更新都会给开发者带来无限惊喜。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/ms174173.aspx" target="_blank"&gt;SQL Server Management Studio&lt;/a&gt;——SQL Server Management Studio将早期版本的SQL Server中所包含的企业管理器、查询分析器和 Analysis Manager 功能整合到单一的环境中。给开发者带来了不少的方便，并且帮助开发者节省开发时间。Express edition版本中的大多数工具即能够满足日常的SQL Server安装管理需求。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/ms181091.aspx" target="_blank"&gt;SQL Server Profiler&lt;/a&gt;——Microsoft SQL Server Profiler是SQL跟踪的图形用户界面，用于监视数据库引擎或Analysis Services的实例。您可以捕获有关每个事件的数据并将其保存到文件或表中供以后分析。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.linqpad.net/" target="_blank"&gt;LINQPad&lt;/a&gt;——使用最佳的.NET代码便签来编写LINQ查询。它并不是SQL Management Studio最佳的替代工具，但当遇到复杂的多数据查询时，它就是我的首选。LINQPad作者Joe Albihari一直在添加新的功能，他最近又增加了一个集成调试器。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://nimbletext.com/" target="_blank"&gt;NimbleText&lt;/a&gt;——谢谢Scott Hanselman让我发现这么好的工具，用来编写重复的代码或处理小型或大型数据转换任务，&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://notepad-plus-plus.org/" target="_blank"&gt;Notepad++&lt;/a&gt;——文本编辑器首选，相当好的插件支持，语法高亮显示，可以在Windows Explorer中编辑任何文本。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.sourcetreeapp.com/" target="_blank"&gt;SourceTree&lt;/a&gt;——Windows和Mac OS X下免费的Git客户端，支持创建、克隆、提交、push、pull 和合并等操作。拥有一个精美简洁的界面，大大简化了开发者与代码库之间的Git操作方式，这对于那些不熟悉Git命令的开发者来说非常实用。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://www.jetbrains.com/decompiler/" target="_blank"&gt;dotPeek&lt;/a&gt;—— .NET平台的一款免费的反编译工具。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm?hl=en" target="_blank"&gt;Postman (Chrome extension)&lt;/a&gt;—— 一款功能强大的网页调试与发送网页HTTP请求的Chrome插件。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.telerik.com/fiddler" target="_blank"&gt;Fiddler&lt;/a&gt;——一个http协议调试代理工具，它能够记录并检查所有你的电脑和互联网之间的http通讯，设置断点，查看所有的“进出”Fiddler的数据。 Fiddler 要比其他的网络调试器要更加简单，因为它不仅仅暴露http通讯还提供了一个用户友好的格式。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.google.com/chrome" target="_blank"&gt;Google Chrome&lt;/a&gt;——我曾使用Firefox，但使用一段时间后感觉非常臃肿。Chrome的开发工具要比Firebug好，此外，它还提供更好地插件和应用程序支持。&lt;/p&gt;&lt;p style="text-align: left;"&gt;Visual Studio插件&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://www.jetbrains.com/resharper/" target="_blank"&gt;ReSharper&lt;/a&gt;——JetBrains公司出品的著名的代码生成工具，使用ReSharper，你可以进行深度代码分析，智能代码协助，实时错误代码高亮显示，解决方案范围内代码分析，快速代码更正，一步完成代码格式化和清理，业界领先的自动代码重构，高级的集成单元测试方案，和强大的解决方案内导航和搜索。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.oz-code.com/" target="_blank"&gt;OzCode&lt;/a&gt;——如果你是一名C#开发者，那么，你则需要OzCode。它将可视化调试的概念上升到了一个新的高度，将循环、表达式、比较阵列都直观的展示出来。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://vswebessentials.com/" target="_blank"&gt;Web Essentials&lt;/a&gt;——由微软Mads Kristensen开发的一个非常棒的工具，对CSS、JavaScript和HTML都提供了很多快捷的功能支持。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://visualstudiogallery.msdn.microsoft.com/dbcb8670-889e-4a54-a226-a48a15e4cace" target="_blank"&gt;Productivity Power Tools&lt;/a&gt;——收集了一堆非常简洁又非常有用的功能来帮助你日常使用Visual Studio。这些功能集中在编辑、浏览以及其他常见的构造代码时会使用到的任务，功能非常强大，大大提高了开发效率。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://vscommands.squaredinfinity.com/" target="_blank"&gt;VSCommands&lt;/a&gt;——可以让Visual Studio更加智能，里面有许多套件，功能非常丰富。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;&lt;span style="font-family: 微软雅黑, &amp;#39;Microsoft YaHei&amp;#39;;"&gt;框架&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;Web&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.asp.net/mvc" target="_blank"&gt;ASP.NET MVC&lt;/a&gt;——ASP.NET MVC 是微软官方提供的以MVC模式为基础的ASP.NET Web应用程序(Web Application)框架。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.asp.net/web-api" target="_blank"&gt;ASP.NET Web API&lt;/a&gt;——构建于MVC之上，可以连接包括浏览器、移动设备等多种客户端的HTTP服务的新框架，是一种用于在 .NET Framework上构建RESTful应用程序的理想平台。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://signalr.net/" target="_blank"&gt;SignalR&lt;/a&gt;——SignalR实现服务器与客户端的实时通信，提供了非常简单易用的高阶API，使服务器端可以单个或批量调用客户端上的JavaScript函数。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.angularjs.org/" target="_blank"&gt;AngularJS&lt;/a&gt;——是一款优秀的前端JS框架，已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是：MVVM、模块化、自动化双向数据绑定、语义化标签、依赖注入，等等。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.jquery.com/" target="_blank"&gt;jQuery&lt;/a&gt;——开源、兼容多浏览器的JS库，核心理念是write less,do more。jQuery的语法设计可以使开发者更加便捷，例如操作文档对象、选择DOM元素、制作动画效果、事件处理、使用Ajax以及其他功能。除此以外，jQuery提供API让开发者编写插件。其模块化的使用方式使开发者可以很轻松的开发出功能强大的静态或动态网页。&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;Mobile&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.xamarin.com/" target="_blank"&gt;Xamarin&lt;/a&gt;——使用C#来开发出非常优秀移动用户体验的框架，作为一个跨平台开发框架，Xamarin.Mobile有很多优点。&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;数据访问&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://msdn.microsoft.com/en-us/data/ef.aspx" target="_blank"&gt;Entity Framework&lt;/a&gt;——访问数据库，使用LINQ于数据库通信，使用属性化的POCOs创建数据视图，模型更新和迁移更加简单。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://github.com/StackExchange/dapper-dot-net" target="_blank"&gt;Dapper&lt;/a&gt;——实现数据到对象的ORM操作，体积小速度快。&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;通用&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.newtonsoft.com/json" target="_blank"&gt;Newtonsoft.JSON&lt;/a&gt;——在.NET中操作JSON序列化和反序列化标准。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://topshelf-project.com/" target="_blank"&gt;TopShelf&lt;/a&gt;——是一种简单的服务托管框架，使用.NET来构建Windows服务。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.rabbitmq.com/" target="_blank"&gt;RabbitMQ&lt;/a&gt;——当你应用程序套件需要一个稳定可靠的消息队列事，RabbitMQ则是你的最佳选择。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://underscorejs.org/" target="_blank"&gt;Underscore.JS&lt;/a&gt;——我最喜欢的JavaScript框架，用来进行对象操作和遍历集合/转换。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://momentjs.com/" target="_blank"&gt;Moment.js&lt;/a&gt;——一个轻量级并且健壮的js日期处理类库。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;&lt;span style="font-family: 微软雅黑, &amp;#39;Microsoft YaHei&amp;#39;;"&gt;小工具&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://justgetflux.com/" target="_blank"&gt;F.lux&lt;/a&gt;——是一款自动屏幕亮度色彩调节，有利于保护程序员们的视力。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.getpaint.net/" target="_blank"&gt;Paint.NET&lt;/a&gt;——基于.NET实现的快速免费的图像处理软件。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.rarlab.com/rar_archiver.htm" target="_blank"&gt;WinRAR&lt;/a&gt;——压缩管理工具。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.jam-software.com/treesize_free/" target="_blank"&gt;Treesize Free&lt;/a&gt;——硬盘管理工具，能够显示文件夹大小。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://lastpass.com/" target="_blank"&gt;LastPass&lt;/a&gt;——一个优秀的在线密码管理器和页面过滤器，采用了强大的加密算法，自动登录/云同步/跨平台/支持多款浏览器。&lt;/p&gt;&lt;p style="text-align: left;"&gt;实用的网站资源&lt;/p&gt;&lt;ul class=" list-paddingleft-2"&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.alvinashcraft.com/" target="_blank"&gt;Dew Drop&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.thedailywtf.com/" target="_blank"&gt;TheDailyWTF&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.reddit.com/" target="_blank"&gt;Reddit&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;a href="https://news.ycombinator.com/" target="_blank"&gt;Hacker News&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://stackexchange.com/" target="_blank"&gt;StackExchange&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style="text-align: left;"&gt;&lt;a href="http://www.hanselman.com/blog/" target="_blank"&gt;Scott Hanselman’s Blog&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</content>
        <tag>.NET</tag>
        <pubTime>2017-03-03T04:53:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/e93e3fc1-0452-413b-9e17-a74a0092c609.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/c2207496-c1f8-43bb-9c0e-a74a00921cd8</loc>
    <lastmod>2017-03-03</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>UWP应用中的PRI文件反编译</title>
        <content>&lt;p&gt;PRI全称Package Resources Index,&amp;nbsp;&lt;a href="https://msdn.microsoft.com/zh-cn/library/windows/apps/jj552947.aspx" target="_blank"&gt;MSDN官方解释&lt;/a&gt;&lt;/p&gt;&lt;p&gt;pri文件是通过微软提供的工具makepri.exe提供了打包、解包PRI功能的。&lt;/p&gt;&lt;p&gt;Windows 8.1版本的makepri.exe路径：&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&amp;nbsp;C:\Program Files (x86)\Windows Kits\8.1\bin\x86\makepri.exe&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Windows 10版本的makepri.exe路径：&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;C:\Program Files (x86)\Windows Kits\10\bin\x64\makepri.exe&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果要反编译Pri to Xml 直接输入命令&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;“C:\Program Files (x86)\Windows Kits\10\bin\x64\makepri.exe” dump &amp;nbsp;/if “c:\resources.pri” /of “c:\resources.pri.xml”&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这时候会在c盘得到resources.pri.xml文件，里面就包含pri的各种信息，下面就是一个pri.xml文件的例子：&lt;/p&gt;&lt;pre class="brush:xml;toolbar:false"&gt;&amp;lt;?xml&amp;nbsp;version=&amp;quot;1.0&amp;quot;&amp;nbsp;encoding=&amp;quot;UTF-8&amp;quot;&amp;nbsp;standalone=&amp;quot;yes&amp;quot;?&amp;gt;
&amp;lt;PriInfo&amp;gt;
	&amp;lt;ResourceMap&amp;nbsp;name=&amp;quot;9452VitorCid.PocketExtractor&amp;quot;&amp;nbsp;version=&amp;quot;1.0&amp;quot;&amp;nbsp;primary=&amp;quot;true&amp;quot;&amp;gt;
		&amp;lt;Qualifiers&amp;gt;
			&amp;lt;Language&amp;gt;EN-US&amp;lt;/Language&amp;gt;
			&amp;lt;Scale&amp;gt;240&amp;lt;/Scale&amp;gt;
			&amp;lt;TargetSize&amp;gt;256,16,32,48&amp;lt;/TargetSize&amp;gt;
		&amp;lt;/Qualifiers&amp;gt;
		&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;Files&amp;quot;&amp;gt;
			&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;App.xbf&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/App.xbf&amp;quot;&amp;gt;
				&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
					&amp;lt;Value&amp;gt;App.xbf&amp;lt;/Value&amp;gt;
				&amp;lt;/Candidate&amp;gt;
			&amp;lt;/NamedResource&amp;gt;
			&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;FileIcon.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/FileIcon.png&amp;quot;&amp;gt;
				&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
					&amp;lt;Value&amp;gt;FileIcon.png&amp;lt;/Value&amp;gt;
				&amp;lt;/Candidate&amp;gt;
			&amp;lt;/NamedResource&amp;gt;
			&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;IntroPage.xbf&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/IntroPage.xbf&amp;quot;&amp;gt;
				&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
					&amp;lt;Value&amp;gt;IntroPage.xbf&amp;lt;/Value&amp;gt;
				&amp;lt;/Candidate&amp;gt;
			&amp;lt;/NamedResource&amp;gt;
			&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;MobileZip.xr.xml&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/MobileZip.xr.xml&amp;quot;&amp;gt;
				&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
					&amp;lt;Value&amp;gt;MobileZip.xr.xml&amp;lt;/Value&amp;gt;
				&amp;lt;/Candidate&amp;gt;
			&amp;lt;/NamedResource&amp;gt;
			&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;PivotPage.xbf&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/PivotPage.xbf&amp;quot;&amp;gt;
				&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
					&amp;lt;Value&amp;gt;PivotPage.xbf&amp;lt;/Value&amp;gt;
				&amp;lt;/Candidate&amp;gt;
			&amp;lt;/NamedResource&amp;gt;
			&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;WindowsStoreProxy.xml&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/WindowsStoreProxy.xml&amp;quot;&amp;gt;
				&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
					&amp;lt;Value&amp;gt;WindowsStoreProxy.xml&amp;lt;/Value&amp;gt;
				&amp;lt;/Candidate&amp;gt;
			&amp;lt;/NamedResource&amp;gt;
			&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;Assets&amp;quot;&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;BadgeLogo.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/BadgeLogo.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Scale-240&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\BadgeLogo.scale-240.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;FileIcon.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/FileIcon.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\FileIcon.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;Icon.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/Icon.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;TargetSize-48&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\Icon.targetsize-48.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;TargetSize-32&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\Icon.targetsize-32.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;TargetSize-256&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\Icon.targetsize-256.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;TargetSize-16&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\Icon.targetsize-16.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;Logo.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/Logo.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Scale-240&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\Logo.scale-240.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;SmallLogo.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/SmallLogo.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Scale-240&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\SmallLogo.scale-240.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;SplashScreen.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/SplashScreen.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Scale-240&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\SplashScreen.scale-240.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;Square71x71Logo.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/Square71x71Logo.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Scale-240&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\Square71x71Logo.scale-240.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;StoreLogo.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/StoreLogo.png&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Scale-240&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Assets\StoreLogo.scale-240.png&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
				&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;icons&amp;quot;&amp;gt;
					&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;ZipIconDark.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/icons/ZipIconDark.png&amp;quot;&amp;gt;
						&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
							&amp;lt;Value&amp;gt;Assets\icons\ZipIconDark.png&amp;lt;/Value&amp;gt;
						&amp;lt;/Candidate&amp;gt;
					&amp;lt;/NamedResource&amp;gt;
					&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;ZipIconLight.png&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Assets/icons/ZipIconLight.png&amp;quot;&amp;gt;
						&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
							&amp;lt;Value&amp;gt;Assets\icons\ZipIconLight.png&amp;lt;/Value&amp;gt;
						&amp;lt;/Candidate&amp;gt;
					&amp;lt;/NamedResource&amp;gt;
				&amp;lt;/ResourceMapSubtree&amp;gt;
			&amp;lt;/ResourceMapSubtree&amp;gt;
			&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;Common&amp;quot;&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;ReadMe.txt&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/Common/ReadMe.txt&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;Common\ReadMe.txt&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
			&amp;lt;/ResourceMapSubtree&amp;gt;
			&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;DataModel&amp;quot;&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;SampleData.json&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Files/DataModel/SampleData.json&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;type=&amp;quot;Path&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;DataModel\SampleData.json&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
			&amp;lt;/ResourceMapSubtree&amp;gt;
		&amp;lt;/ResourceMapSubtree&amp;gt;
		&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;Resources&amp;quot;&amp;gt;
			&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;AddAppBarButton&amp;quot;&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;Label&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Resources/AddAppBarButton/Label&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Language-EN-US&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;String&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;add&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
			&amp;lt;/ResourceMapSubtree&amp;gt;
			&amp;lt;ResourceMapSubtree&amp;nbsp;name=&amp;quot;Header&amp;quot;&amp;gt;
				&amp;lt;NamedResource&amp;nbsp;name=&amp;quot;Text&amp;quot;&amp;nbsp;uri=&amp;quot;ms-resource://9452VitorCid.PocketExtractor/Resources/Header/Text&amp;quot;&amp;gt;
					&amp;lt;Candidate&amp;nbsp;qualifiers=&amp;quot;Language-EN-US&amp;quot;&amp;nbsp;isDefault=&amp;quot;true&amp;quot;&amp;nbsp;type=&amp;quot;String&amp;quot;&amp;gt;
						&amp;lt;Value&amp;gt;MOBILE&amp;nbsp;ZIP&amp;lt;/Value&amp;gt;
					&amp;lt;/Candidate&amp;gt;
				&amp;lt;/NamedResource&amp;gt;
			&amp;lt;/ResourceMapSubtree&amp;gt;
		&amp;lt;/ResourceMapSubtree&amp;gt;
	&amp;lt;/ResourceMap&amp;gt;
&amp;lt;/PriInfo&amp;gt;&lt;/pre&gt;&lt;p&gt;pri文件的反编译不仅可以用于UWP，Modern应用，还有一个比较成功的案例&lt;a href="https://github.com/PFCKrutonium/Windows-10-Login-Background-Changer" target="_blank"&gt;Windows-10-Login-Background-Changer&lt;/a&gt;，用于更换Win10登录背景的工具。&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</content>
        <tag>反编译UWP</tag>
        <pubTime>2017-03-03T04:49:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/c75b285e-9d7a-42cd-b52f-a74a0091f7b7.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/1da01f8e-c8cc-4cd0-91ca-a74a0090255c</loc>
    <lastmod>2017-02-03</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>在Desktop的WebView上运行手机版本页面</title>
        <content>&lt;p style="text-align: left;"&gt;UWP应用支持多种设备，同一套代码可以多处运行，虽然代码相同但是功能上可能会有些差异，在Desktop上的WebView通常运行该网页的PC版本，在Mobile上则为移动版本。如何让PC上的WebView运行Mobile的版本呢？这里要先介绍一下User-Agent。&lt;/p&gt;&lt;p style="text-align: left;"&gt;User-Agent&lt;/p&gt;&lt;p style="text-align: left;"&gt;在浏览器浏览网页时,浏览器会发送User Agent到网站服务器,服务器可以根据User Agent识别用户的操作系统及版本,浏览器及版本，然后判断用户浏览器可以支持的功能,从而返回给浏览器不同的代码。&lt;/p&gt;&lt;p style="text-align: left;"&gt;所以要让PC的WebView访问手机的页面，就只要改变WebView的UA即可。&lt;/p&gt;&lt;pre&gt;var&amp;nbsp;httpRequestMessage&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HttpRequestMessage(Windows.Web.Http.HttpMethod.Get,&amp;nbsp;new&amp;nbsp;Uri(&amp;quot;&amp;nbsp;
var&amp;nbsp;userAgent&amp;nbsp;=&amp;nbsp;&amp;quot;Mozilla/5.0&amp;nbsp;(iPhone;&amp;nbsp;CPU&amp;nbsp;iPhone&amp;nbsp;OS&amp;nbsp;9_1&amp;nbsp;like&amp;nbsp;Mac&amp;nbsp;OS&amp;nbsp;X)&amp;nbsp;AppleWebKit/601.1.46&amp;nbsp;(KHTML,&amp;nbsp;like&amp;nbsp;Gecko)&amp;nbsp;Version/9.0&amp;nbsp;Mobile/13B143&amp;nbsp;Safari/601.1&amp;quot;;
httpRequestMessage.Headers.Add(&amp;quot;User-Agent&amp;quot;,&amp;nbsp;userAgent);
Webview.NavigateWithHttpRequestMessage(httpRequestMessage);&lt;/pre&gt;&lt;p style="text-align: left;"&gt;这里列几个常用的UA,可以用它们模拟各种设备。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;Edge&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: left;"&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;Iphone 6s&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: left;"&gt;Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;Nexus 6P&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style="text-align: left;"&gt;Mozilla/5.0 (Linux; Android 5.1.1; Nexus 6 Build/LYZ28E) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/48.0.2564.23 Mobile Safari/537.36&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;设置后就能在Desktop应用上显示Mobile的页面，贴吧UWP的登录页面就是这么实现的。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/a46185d2-cce3-45dd-9be8-a74a008fb393.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;但是会发现贴吧UWP验证码的刷新功能并不能使用，Why？&lt;/p&gt;&lt;p style="text-align: left;"&gt;百度的登录界面的刷新功能使用了是tap事件，但是在desktop的webview中并不支持，只能使用click事件，所以我们需要把click事件路由到tap事件去。&lt;/p&gt;&lt;p style="text-align: left;"&gt;需要使用WebView的InvokeScriptAsync方法执行下列代码&lt;/p&gt;&lt;pre&gt;document.querySelector(&amp;#39;body&amp;#39;).addEventListener(&amp;#39;click&amp;#39;,&amp;nbsp;function(event)&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;target&amp;nbsp;=&amp;nbsp;event.target;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;event&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Event(&amp;#39;tap&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;target.dispatchEvent(event);});&lt;/pre&gt;&lt;p style="text-align: left;"&gt;这样你会发现点击click事件会同时分发tap事件，用这个思路就可以解决大部分Desktop运行Mobile界面的问题。&lt;/p&gt;</content>
        <tag>UWPWebView</tag>
        <pubTime>2017-02-03T04:43:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/d0356343-fbf3-4112-b44f-a74a009004e2.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/239ebe9f-7db8-4fc2-8c01-a74a008f1334</loc>
    <lastmod>2017-02-03</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>在群晖NAS上搭建Git Server</title>
        <content>&lt;p&gt;最近买了一台群晖NAS，在DSM上搭建了Git Server，用于自己的工作。由于DSM的Git配置没有很直观的教程，特此分享出来。&lt;/p&gt;&lt;p&gt;1.首先，进入DSM，然后在套件中心中找到GIT SERVER，下载安装。&lt;img src="http://cdn.datiancun.com/eb26cf60-df7d-4d20-a8cf-a74a008d6897.png" width="600" height="353" border="0" vspace="0" title="" alt="" style="width: 600px; height: 353px;"/&gt;&lt;/p&gt;&lt;p&gt;2、安装成功之后，在Git Server上配置使用账户。&lt;/p&gt;&lt;p&gt;3、然后进入控制面板 &amp;gt; 终端机并启用 SSH 服务。&lt;/p&gt;&lt;p&gt;4、在Windows 10的CMD中输入Bash进入linux子系统，ssh chenrensong@192.168.1.16&amp;nbsp;链接成功后，通过sudo -i&amp;nbsp;获取管理员权限&lt;/p&gt;&lt;p&gt;5、先进入你的磁盘卷，一般名字是volumeX,X表示你创建的磁盘空间数量，一般这个机器就两个硬盘，一般就是volume1了&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;cd /volume1&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;接着创建一个git库目录&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;mkdir git_work&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;然后再里面创建一个测试项目&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;cd git_work&lt;br/&gt;mkdir test&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;然后进入这个测试项目目录&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;cd test&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;进行GIT初始化&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;git init --bare&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;由于是root用户执行的操作，所以有一个最最重要的步骤，就是将这个宝库的整个目录的主人要修改为你的git用户&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;chown -R chenrensong:users &amp;nbsp;git_work&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;如果你还想让其他用户也一起共享的话，还需要将其他用户的权限设置为可写&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;chmod -R 775 git_work&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;当然，这里的git_work是整个库目录，我是为了省事情，如果不同项目需要区别对待，那就对里面的项目目录进行设置就可以了。&lt;/p&gt;&lt;p&gt;总的原则就是某个用户要想能推送文件到服务器，必须打开这个用户对整个项目目录，包括子目录的写权限，否则就会失败。&lt;/p&gt;&lt;p&gt;这样Git服务就设置完毕了。&lt;/p&gt;&lt;p&gt;在本地进入git 命令行，测试一下是否可以下载和上传。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;git clone ssh://chenrensong@192.168.1.16/volume1/git_work/test&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;然后再本地添加一个文件并提交到本地版本库中&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;git add test.txt&lt;br/&gt;git commit -m &amp;quot;add test.txt&amp;quot;git push origin master&lt;br/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;这样就能添加并推送test.txt到Git Server上！&lt;/p&gt;&lt;p&gt;&lt;br/&gt;&lt;/p&gt;</content>
        <tag>NAS群晖DSM</tag>
        <pubTime>2017-02-03T04:35:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/5384bfc0-2160-4455-b97d-a74a008f0a4b.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/7f9746a7-98d8-442f-bae1-a74a00d9df5b</loc>
    <lastmod>2016-11-23</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>贴吧UWP新版BDUSS登录教程</title>
        <content>&lt;p style="text-align: left;"&gt;之前听很多朋友说贴吧不能登录，这次在贴吧&lt;span style="color: rgb(255, 0, 0);"&gt;7.7.12.0&lt;/span&gt;版本特别添加了BDUSS登录方式,那么如何使用呢？&lt;/p&gt;&lt;p style="text-align: left;"&gt;首先用Chrome打开&amp;nbsp;&lt;a href="https://passport.baidu.com/" target="_blank"&gt;https://passport.baidu.com&lt;/a&gt;&amp;nbsp;登录百度账号，登录成功之后，按F12打开调试面板，点击Network随便点击一个请求就能看到你的BDUSS，如下图。&amp;nbsp;&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/52bd1ece-18d6-4760-801d-a74a00d94f32.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;这时候只要复制BDUSS和Ptoken，在贴吧登录界面点击下方的Appbar的BDUSS登录，输入你刚才复制的信息即可完成登录。&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://cdn.datiancun.com/db77ba3d-3489-408e-a683-a74a00d94f93.png"/&gt;&lt;/p&gt;</content>
        <tag>贴吧</tag>
        <pubTime>2016-11-23T09:11:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/7284c950-567e-45a9-aea1-a74a00d9dad5.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/7ed9a44f-07e3-404c-9b6b-a74a00dbbd26</loc>
    <lastmod>2016-11-11</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>用C#来实现知乎登录</title>
        <content>&lt;p&gt;最近写了个抓取知乎数据的爬虫，刚开始没注意好控制频率，封了好多个账号。orz，现重新整理下给大家分享，本篇和大家介绍下如何实现知乎登录。&lt;/p&gt;&lt;p&gt;基本上有2种思路&lt;/p&gt;&lt;p&gt;1、直接人工在网站上登录获取到cookie，在代码里直接使用该cookie访问知乎。&lt;/p&gt;&lt;p&gt;2、通过账号&amp;amp;密码模拟知乎登录获取cookie，再使用cookie访问知乎。&lt;/p&gt;&lt;p&gt;第一种方式比较简单，但是后续cookie过期后使用比较繁琐，这里我先介绍一下：&lt;/p&gt;&lt;p&gt;首先打开知乎https://www.zhihu.com/，登录你的账号，登录成功后打开chrome调试模式&amp;nbsp;&lt;img src="http://cdn.datiancun.com/6de036fc-7ea8-475e-ba37-a74a00db15b3.png" width="600" height="164" border="0" vspace="0" title="" alt="" style="width: 600px; height: 164px;"/&gt;&lt;/p&gt;&lt;p&gt;这里就能看到知乎的cookie,通过下面的代码就可以把这个string的cookie转化为CookieContainer。&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;CookieContainer&amp;nbsp;addCookieToContainer(string&amp;nbsp;cookie,&amp;nbsp;CookieContainer&amp;nbsp;cc,&amp;nbsp;string&amp;nbsp;domain)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string[]&amp;nbsp;tempCookies&amp;nbsp;=&amp;nbsp;cookie.Split(&amp;#39;;&amp;#39;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;tempCookie&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;Equallength&amp;nbsp;=&amp;nbsp;0;//&amp;nbsp;&amp;nbsp;=的位置&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;cookieKey&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;cookieValue&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//qg.gome.com.cn&amp;nbsp;&amp;nbsp;cookie&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for&amp;nbsp;(int&amp;nbsp;i&amp;nbsp;=&amp;nbsp;0;&amp;nbsp;i&amp;nbsp;&amp;lt;&amp;nbsp;tempCookies.Length;&amp;nbsp;i++)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(!string.IsNullOrEmpty(tempCookies[i]))
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tempCookie&amp;nbsp;=&amp;nbsp;tempCookies[i];

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Equallength&amp;nbsp;=&amp;nbsp;tempCookie.IndexOf(&amp;quot;=&amp;quot;);

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(Equallength&amp;nbsp;!=&amp;nbsp;-1)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//有可能cookie&amp;nbsp;无=，就直接一个cookiename；比如:a=3;ck;abc=;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookieKey&amp;nbsp;=&amp;nbsp;tempCookie.Substring(0,&amp;nbsp;Equallength).Trim();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(Equallength&amp;nbsp;==&amp;nbsp;tempCookie.Length&amp;nbsp;-&amp;nbsp;1)&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//这种是等号后面无值，如：abc=;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookieValue&amp;nbsp;=&amp;nbsp;&amp;quot;&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookieValue&amp;nbsp;=&amp;nbsp;tempCookie.Substring(Equallength&amp;nbsp;+&amp;nbsp;1,&amp;nbsp;tempCookie.Length&amp;nbsp;-&amp;nbsp;Equallength&amp;nbsp;-&amp;nbsp;1).Trim();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookieKey&amp;nbsp;=&amp;nbsp;tempCookie.Trim();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookieValue&amp;nbsp;=&amp;nbsp;&amp;quot;&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cc.Add(new&amp;nbsp;Cookie(cookieKey,&amp;nbsp;cookieValue,&amp;nbsp;&amp;quot;&amp;quot;,&amp;nbsp;domain));
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;cc;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p&gt;通过扩展WebClient使得CookieAwareWebClient支持Cookie&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;&amp;nbsp;class&amp;nbsp;CookieAwareWebClient&amp;nbsp;:&amp;nbsp;WebClient
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CookieContainer&amp;nbsp;CookieContainer&amp;nbsp;{&amp;nbsp;get;&amp;nbsp;set;&amp;nbsp;}


&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CookieAwareWebClient()
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;:&amp;nbsp;this(new&amp;nbsp;CookieContainer())
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;CookieAwareWebClient(CookieContainer&amp;nbsp;c)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.CookieContainer&amp;nbsp;=&amp;nbsp;c;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;override&amp;nbsp;WebRequest&amp;nbsp;GetWebRequest(Uri&amp;nbsp;address)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WebRequest&amp;nbsp;request&amp;nbsp;=&amp;nbsp;base.GetWebRequest(address);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(request&amp;nbsp;is&amp;nbsp;HttpWebRequest)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(request&amp;nbsp;as&amp;nbsp;HttpWebRequest).CookieContainer&amp;nbsp;=&amp;nbsp;this.CookieContainer;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;request;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p&gt;通过下列代码访问知乎任何页面就是登录状态。&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;cookies&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CookieContainer();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;addCookieToContainer(strCookies,&amp;nbsp;cookies,&amp;nbsp;&amp;quot;zhihu.com&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;CookieAwareWebClient&amp;nbsp;webClient&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CookieAwareWebClient(cookies);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;webClient.Headers.Add(HttpRequestHeader.Host,&amp;nbsp;&amp;quot;www.zhihu.com&amp;quot;);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;webClient.Headers.Add(HttpRequestHeader.Referer,&amp;nbsp;&amp;quot;https://www.zhihu.com/&amp;quot;);&lt;/pre&gt;&lt;p&gt;知道了第一种方式，第二种方式就很简单了，其实就是如何通过技术手段获取到Cookie，我们同样使用抓包。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;_xsrf:28584f1e1e9938ffda9b449eb26b4635 password:19000000 captcha:1234 remember_me:true phone_num:13774564000&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;_xsrf为跨域验证字符串，password为用户密码，remember_me为是否记住密码，phone_num为手机号搞明白了这些就好办了&lt;/p&gt;&lt;p&gt;获取验证码代码&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;string&amp;nbsp;url&amp;nbsp;=&amp;nbsp;&amp;quot;http://www.zhihu.com/captcha.gif?r=1466524792819&amp;amp;type=login&amp;quot;;&amp;nbsp;&amp;nbsp;//验证码页面&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpWebRequest&amp;nbsp;request&amp;nbsp;=&amp;nbsp;(HttpWebRequest)WebRequest.Create(url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Method&amp;nbsp;=&amp;nbsp;&amp;quot;GET&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Host&amp;nbsp;=&amp;nbsp;&amp;quot;www.zhihu.com&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Accept&amp;nbsp;=&amp;nbsp;&amp;quot;*/*;&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.UserAgent&amp;nbsp;=&amp;nbsp;&amp;quot;Mozilla/5.0&amp;nbsp;(Windows&amp;nbsp;NT&amp;nbsp;10.0;&amp;nbsp;WOW64)&amp;nbsp;AppleWebKit/537.36&amp;nbsp;(KHTML,&amp;nbsp;like&amp;nbsp;Gecko)&amp;nbsp;Chrome/49.0.2623.112&amp;nbsp;Safari/537.36&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.ContentType&amp;nbsp;=&amp;nbsp;&amp;quot;application/x-www-form-urlencoded&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.AllowAutoRedirect&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.CookieContainer&amp;nbsp;=&amp;nbsp;cookies;&amp;nbsp;//暂存到新实例&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//request.CookieContainer&amp;nbsp;=&amp;nbsp;cookies;&amp;nbsp;//此处使用获取验证码的那个cookie&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpWebResponse&amp;nbsp;response&amp;nbsp;=&amp;nbsp;(HttpWebResponse)request.GetResponse();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MemoryStream&amp;nbsp;ms&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;using&amp;nbsp;(var&amp;nbsp;stream&amp;nbsp;=&amp;nbsp;response.GetResponseStream())
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Byte[]&amp;nbsp;buffer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Byte[response.ContentLength];
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;offset&amp;nbsp;=&amp;nbsp;0,&amp;nbsp;actuallyRead&amp;nbsp;=&amp;nbsp;0;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;do
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;actuallyRead&amp;nbsp;=&amp;nbsp;stream.Read(buffer,&amp;nbsp;offset,&amp;nbsp;buffer.Length&amp;nbsp;-&amp;nbsp;offset);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;offset&amp;nbsp;+=&amp;nbsp;actuallyRead;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while&amp;nbsp;(actuallyRead&amp;nbsp;&amp;gt;&amp;nbsp;0);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ms&amp;nbsp;=&amp;nbsp;new&amp;nbsp;MemoryStream(buffer);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response.Close();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookies&amp;nbsp;=&amp;nbsp;request.CookieContainer;&amp;nbsp;//保存cookies&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strCookies&amp;nbsp;=&amp;nbsp;request.CookieContainer.GetCookieHeader(request.RequestUri);&amp;nbsp;//把cookies转换成字符串&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BitmapImage&amp;nbsp;imgSource&amp;nbsp;=&amp;nbsp;new&amp;nbsp;BitmapImage();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;imgSource.BeginInit();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;imgSource.StreamSource&amp;nbsp;=&amp;nbsp;new&amp;nbsp;MemoryStream(ms.ToArray());
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;imgSource.EndInit();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;icaptcha.Source&amp;nbsp;=&amp;nbsp;imgSource;&lt;/pre&gt;&lt;p&gt;获取xsrf代码&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;&amp;nbsp;private&amp;nbsp;string&amp;nbsp;GetXsrf(string&amp;nbsp;uri)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpWebRequest&amp;nbsp;request&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;url&amp;nbsp;=&amp;nbsp;uri;&amp;nbsp;&amp;nbsp;&amp;nbsp;//登录页面&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request&amp;nbsp;=&amp;nbsp;(HttpWebRequest)WebRequest.Create(url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Method&amp;nbsp;=&amp;nbsp;&amp;quot;get&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.CookieContainer&amp;nbsp;=&amp;nbsp;new&amp;nbsp;CookieContainer();&amp;nbsp;//暂存到新实例&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//request.CookieContainer&amp;nbsp;=&amp;nbsp;cookies;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Accept&amp;nbsp;=&amp;nbsp;&amp;quot;*/*;&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.UserAgent&amp;nbsp;=&amp;nbsp;&amp;quot;Mozilla/4.0&amp;nbsp;(compatible;&amp;nbsp;MSIE&amp;nbsp;8.0;&amp;nbsp;Windows&amp;nbsp;NT&amp;nbsp;6.1;&amp;nbsp;Trident/5.0;&amp;nbsp;SLCC2;&amp;nbsp;.NET&amp;nbsp;CLR&amp;nbsp;2.0.50727;&amp;nbsp;.NET&amp;nbsp;CLR&amp;nbsp;3.5.30729;&amp;nbsp;.NET&amp;nbsp;CLR&amp;nbsp;3.0.30729;&amp;nbsp;Media&amp;nbsp;Center&amp;nbsp;PC&amp;nbsp;6.0;&amp;nbsp;.NET4.0C;&amp;nbsp;.NET4.0E;&amp;nbsp;InfoPath.3;&amp;nbsp;BOIE9;ZHCN)&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.ContentType&amp;nbsp;=&amp;nbsp;&amp;quot;application/x-www-form-urlencoded&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.AllowAutoRedirect&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.KeepAlive&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Referer&amp;nbsp;=&amp;nbsp;url;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpWebResponse&amp;nbsp;response&amp;nbsp;=&amp;nbsp;(HttpWebResponse)request.GetResponse();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;strWebData&amp;nbsp;=&amp;nbsp;string.Empty;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;using&amp;nbsp;(StreamReader&amp;nbsp;reader&amp;nbsp;=&amp;nbsp;new&amp;nbsp;StreamReader(response.GetResponseStream()))
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strWebData&amp;nbsp;=&amp;nbsp;reader.ReadToEnd();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookies&amp;nbsp;=&amp;nbsp;request.CookieContainer;&amp;nbsp;//保存cookies&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strCookies&amp;nbsp;=&amp;nbsp;request.CookieContainer.GetCookieHeader(request.RequestUri);&amp;nbsp;//把cookies转换成字符串&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;strWebData.Substring(strWebData.IndexOf(&amp;quot;_xsrf&amp;quot;)&amp;nbsp;+&amp;nbsp;14,&amp;nbsp;32);//此处测试使用为了提升性能可以用正则表达式&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p&gt;实现登录代码，记住这里的CookieContainer一定要保留到后续请求使用&lt;/p&gt;&lt;pre class="brush:c#;toolbar:false"&gt;&amp;nbsp;private&amp;nbsp;string&amp;nbsp;Login(string&amp;nbsp;name,&amp;nbsp;string&amp;nbsp;password,&amp;nbsp;string&amp;nbsp;yzm)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpWebRequest&amp;nbsp;request&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;url&amp;nbsp;=&amp;nbsp;&amp;quot;http://www.zhihu.com/login/phone_num&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request&amp;nbsp;=&amp;nbsp;(HttpWebRequest)WebRequest.Create(url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Method&amp;nbsp;=&amp;nbsp;&amp;quot;POST&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Host&amp;nbsp;=&amp;nbsp;&amp;quot;www.zhihu.com&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.Accept&amp;nbsp;=&amp;nbsp;&amp;quot;*/*;&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.UserAgent&amp;nbsp;=&amp;nbsp;&amp;quot;Mozilla/5.0&amp;nbsp;(Windows&amp;nbsp;NT&amp;nbsp;10.0;&amp;nbsp;WOW64)&amp;nbsp;AppleWebKit/537.36&amp;nbsp;(KHTML,&amp;nbsp;like&amp;nbsp;Gecko)&amp;nbsp;Chrome/49.0.2623.112&amp;nbsp;Safari/537.36&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.ContentType&amp;nbsp;=&amp;nbsp;&amp;quot;application/x-www-form-urlencoded&amp;quot;;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.AllowAutoRedirect&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//cookies.Add(new&amp;nbsp;Uri(&amp;quot;http://www.zhihu.com&amp;quot;),&amp;nbsp;new&amp;nbsp;Cookie(&amp;quot;_xsrf&amp;quot;,&amp;nbsp;_xsrf));

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.CookieContainer&amp;nbsp;=&amp;nbsp;cookies;&amp;nbsp;//此处使用获取验证码的那个cookie&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.KeepAlive&amp;nbsp;=&amp;nbsp;true;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;var&amp;nbsp;_xsrf&amp;nbsp;=&amp;nbsp;GetXsrf(url);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;postData&amp;nbsp;=&amp;nbsp;string.Format(&amp;quot;_xsrf={0}&amp;amp;password={1}&amp;amp;captcha={3}&amp;amp;remember_me=true&amp;amp;email={2}&amp;quot;,&amp;nbsp;_xsrf,&amp;nbsp;password,&amp;nbsp;name,&amp;nbsp;yzm);


&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;postData&amp;nbsp;=&amp;nbsp;string.Format(&amp;quot;password={0}&amp;amp;captcha={2}&amp;amp;remember_me=false&amp;amp;phone_num={1}&amp;quot;,&amp;nbsp;password,&amp;nbsp;name,&amp;nbsp;yzm);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[]&amp;nbsp;postdatabyte&amp;nbsp;=&amp;nbsp;Encoding.UTF8.GetBytes(postData);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;request.ContentLength&amp;nbsp;=&amp;nbsp;postdatabyte.Length;

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;using&amp;nbsp;(Stream&amp;nbsp;stream&amp;nbsp;=&amp;nbsp;request.GetRequestStream())
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stream.Write(postdatabyte,&amp;nbsp;0,&amp;nbsp;postdatabyte.Length);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpWebResponse&amp;nbsp;response&amp;nbsp;=&amp;nbsp;(HttpWebResponse)request.GetResponse();

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;string&amp;nbsp;strWebData&amp;nbsp;=&amp;nbsp;string.Empty;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;using&amp;nbsp;(StreamReader&amp;nbsp;reader&amp;nbsp;=&amp;nbsp;new&amp;nbsp;StreamReader(response.GetResponseStream()))
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strWebData&amp;nbsp;=&amp;nbsp;reader.ReadToEnd();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cookies&amp;nbsp;=&amp;nbsp;request.CookieContainer;&amp;nbsp;//保存cookies&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;strCookies&amp;nbsp;=&amp;nbsp;request.CookieContainer.GetCookieHeader(request.RequestUri);&amp;nbsp;//把cookies转换成字符串&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;strWebData;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p&gt;不管你使用哪种方式，都要记得CookieContainer一定要用于后续的请求，相当于是身份认证的标示。&lt;/p&gt;</content>
        <tag>知乎</tag>
        <pubTime>2016-11-11T09:16:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/06025285-26e0-481f-b407-a74a00db479b.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/9e04d0bc-1adb-447b-90d3-a74a00e65a8a</loc>
    <lastmod>2016-09-05</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>在Mac上写一个抓包工具-入门篇</title>
        <content>&lt;p&gt;之前在Windows上用.Net写过一个抓取TCP包的一个工具，但是越来越多周围的同事使用Mac，最近打算把她迁移到Mac上来，我在Windows上基于winpcap进行开发的，libpcap是winpcap的Linux版本，著名的tcpdump就是使用libpcap进行抓包的，Mac当然也可以使用libpcap进行抓包。&lt;/p&gt;&lt;p&gt;在Windows上我的方案是&lt;/p&gt;&lt;p&gt;1、WPF&lt;/p&gt;&lt;p&gt;2、Pcap.Net&lt;/p&gt;&lt;p&gt;3、Winpcap&lt;/p&gt;&lt;p&gt;由于Pcap.Net只适用于Winpcap，所以在Mac上需要替换成SharpPcap，SharpPcap封装了Winpcap以及libpcap的功能，所以在Mac上我的解决方案采用&lt;/p&gt;&lt;p&gt;1、Xamarin Cocoa App&lt;/p&gt;&lt;p&gt;2、SharpPcap&lt;/p&gt;&lt;p&gt;3、libpcap&lt;/p&gt;&lt;p&gt;首先到&lt;a href="http://www.tcpdump.org" target="_blank"&gt;http://www.tcpdump.org&lt;/a&gt; 下载&lt;code&gt;libpcap&lt;/code&gt;，进入到源码目录输入命令&lt;/p&gt;&lt;pre&gt;./configure
make
make&amp;nbsp;install&lt;/pre&gt;&lt;p&gt;执行成功后就可以直接在Tamarin上引用SharpPcap了，需要注意的是我们需要修改&lt;code&gt;SharpPcap.dll.config&lt;/code&gt;&lt;/p&gt;&lt;pre&gt;&amp;lt;configuration&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;dllmap&amp;nbsp;dll=&amp;quot;wpcap&amp;quot;&amp;nbsp;target=&amp;quot;libpcap.dylib&amp;quot;&amp;nbsp;/&amp;gt;
&amp;lt;/configuration&amp;gt;&lt;/pre&gt;&lt;p&gt;在Mac上不是&lt;code&gt;libpcap.so&lt;/code&gt; 而是&lt;code&gt;libpcap.dylib&lt;/code&gt; 具体信息可以参考&lt;/p&gt;&lt;pre&gt;http://www.mono-project.com/Interop_with_Native_Libraries#Library_Names&lt;/pre&gt;&lt;p&gt;当然不是到此为止了，此时的libpcap在非root的用户下并不可以执行，由于libpcap库使用raw socket的套接字。而raw socket的使用需要root权限，否则raw socket会创建失败，因此基于raw socket编写的应用程序必须在root具有用户权限才能使用。&lt;/p&gt;&lt;p&gt;为了让基于Raw Socket应用程序在非Root用户下能够执行，在你编译完基于Raw Socket的应用程序之后，执行下面3步：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;进入root用户权限，若已经在root用户权限下忽略这一步&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;sudo&amp;nbsp;-i&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;#&amp;nbsp;输入root密码&lt;/pre&gt;&lt;p&gt;到此为止SharpPcap可以在你的Xamarin Cocoa App上正常使用了&lt;/p&gt;</content>
        <tag />
        <pubTime>2016-09-05T09:58:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/e527fe0f-20c1-4ce5-aa4d-a74a00e6585a.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/f7050683-8fb9-4a44-b013-a74a00e5019a</loc>
    <lastmod>2016-05-24</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>在Windows 10中开启Linux子系统体验</title>
        <content>&lt;p style="text-align: left;"&gt;最新版本的Windows 10中已经集成了Linux子系统，大家可以到控制面板中找到程序-启用或关闭windows功能，然后找到“适用于 Linux 的 Windows 子系统（Beta）”，勾选安装&amp;nbsp;&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/c33ea856-9757-46b9-a142-a74a00e39ac4.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;&amp;nbsp;安装完成后系统会要求重启，重启后打开开命令提示符（cmd），输入bash，会提示需要从windows 应用商店下载，按y确认。该过程比较长。等待漫长的下载过程完成后就会正式进入bash啦。&amp;nbsp;&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/50cb9fe4-a918-4bec-a2e6-a74a00e39b08.png" width="600" height="314" border="0" vspace="0" title="" alt="" style="width: 600px; height: 314px;"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;现在可以输入lsb_release -a命令查看子系统版本，发现是ubuntu14.04，目前子系统某些情况下无法运行，运行多个后会提示“无法启动bash，因为 LX 子系统有一个安装、卸载或维修操作未完成”&amp;nbsp;&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/4a999257-7880-421a-8ba2-a74a00e39b48.png" width="600" height="390" border="0" vspace="0" title="" alt="" style="width: 600px; height: 390px;"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;其实在bash模式下，Ubuntu是作为Windows 10 的子系统挂载到Linux系统中。 所有的Windows文件都被挂载到 Linux的&amp;nbsp;/mnt/&amp;nbsp;下面的盘符 。如C盘对应的是&amp;nbsp;/mnt/c，D盘对应的是&amp;nbsp;/mnt/d&amp;nbsp;安装好的Ubuntu子系统安装文件路径：&lt;br/&gt;&lt;/p&gt;&lt;blockquote style="text-align: left;"&gt;&lt;p style="text-align: left;"&gt;%localappdata%\lxss&lt;/p&gt;&lt;p style="text-align: left;"&gt;%localappdata%\lxss\rootfs&amp;nbsp;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;可以直接按Win+R输入相关命令即可跳转到相应的文件夹中。&lt;br style="text-align: left;"/&gt;&lt;/p&gt;&lt;p&gt;&lt;br style="text-align: left;"/&gt;&lt;/p&gt;</content>
        <tag>Windows</tag>
        <pubTime>2016-05-24T09:49:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/a340159f-f719-44ab-8160-a74a00e4fdbe.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/829d5aed-77de-4661-a895-a74a00e01faa</loc>
    <lastmod>2016-03-25</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>在UWP应用中禁用&amp;开启截取应用屏幕</title>
        <content>&lt;p style="text-align: left;"&gt;用过iOS支付宝的同学都应该知道，在切换App的时候界面是模糊的，为了防止自己的隐私数据被泄露，本文就是告诉大家如何在UWP应用中实现这个效果么。&lt;/p&gt;&lt;p style="text-align: left;"&gt;新建一个页面，在.xaml里加入下列代码&lt;/p&gt;&lt;pre&gt;&amp;lt;StackPanel&amp;nbsp;HorizontalAlignment=&amp;quot;Center&amp;quot;&amp;nbsp;VerticalAlignment=&amp;quot;Center&amp;quot;&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;Button&amp;nbsp;x:Name=&amp;quot;CaptureButton&amp;quot;&amp;nbsp;Content=&amp;quot;Enable&amp;nbsp;Capture&amp;quot;&amp;nbsp;Click=&amp;quot;CaptureButton_Click&amp;quot;&amp;nbsp;/&amp;gt;
&amp;nbsp;&amp;nbsp;&amp;lt;TextBlock&amp;nbsp;Name=&amp;quot;status&amp;quot;&amp;nbsp;Margin=&amp;quot;0,20,0,0&amp;quot;&amp;gt;&amp;lt;/TextBlock&amp;gt;&amp;nbsp;&amp;nbsp;&amp;lt;/StackPanel&amp;gt;&lt;/pre&gt;&lt;p style="text-align: left;"&gt;在.cs里面加入下面Click事件代码&lt;/p&gt;&lt;pre&gt;private&amp;nbsp;void&amp;nbsp;CaptureButton_Click(object&amp;nbsp;sender,&amp;nbsp;RoutedEventArgs&amp;nbsp;e)&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(captureButton.Content.ToString()&amp;nbsp;==&amp;nbsp;&amp;quot;Enable&amp;nbsp;Capture&amp;quot;)&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;captureButton.Content&amp;nbsp;=&amp;nbsp;&amp;quot;Disable&amp;nbsp;Capture&amp;quot;;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;status.Text&amp;nbsp;=&amp;nbsp;&amp;quot;Screen&amp;nbsp;Capturing&amp;nbsp;is&amp;nbsp;enabled&amp;quot;;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows.UI.ViewManagement.ApplicationView.GetForCurrentView().IsScreenCaptureEnabled&amp;nbsp;=&amp;nbsp;true;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;captureButton.Content&amp;nbsp;=&amp;nbsp;&amp;quot;Enable&amp;nbsp;Capture&amp;quot;;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;status.Text&amp;nbsp;=&amp;nbsp;&amp;quot;Screen&amp;nbsp;Capturing&amp;nbsp;is&amp;nbsp;disabled&amp;quot;;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows.UI.ViewManagement.ApplicationView.GetForCurrentView().IsScreenCaptureEnabled&amp;nbsp;=&amp;nbsp;false;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;&amp;nbsp;}&lt;/pre&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/167bbc2b-edbe-4388-aca6-a74a00dfc92c.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;如果你关闭了截图功能,当你使用截图软件的时候，你会发现截取的是一个黑色的屏幕界面。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/2d270c20-8d64-4859-8e8a-a74a00dfc977.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;就此大功告成！！！&lt;/p&gt;&lt;p&gt;&lt;br style="text-align: left;"/&gt;&lt;/p&gt;</content>
        <tag>UWP</tag>
        <pubTime>2016-03-25T09:35:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/16475fa0-0e09-4d4e-9c23-a74a00e01a99.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/c071988a-cf4f-4ca6-ac4f-a74a00e28202</loc>
    <lastmod>2015-12-06</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>Android开发中应该避免的内存泄露</title>
        <content>&lt;p&gt;&lt;strong&gt;一、背景和目的：&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;目前许多开发人员在Android开发过程中，较少关注实现细节和内存使用，容易会造成内存泄露，导致程序OOM。&lt;/p&gt;&lt;p&gt;本文会通过代码向大家介绍在Android开发过程中常见的内存泄露。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;二、常见的内存泄露代码&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;strong&gt;、使用Handler&lt;/strong&gt;&lt;strong&gt;造成的内存问题&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在Android开发过程中，Handler是比较常用的，通过Handler发送Message与主线程进行通信，Message发送之后是存储在MessageQueue中的，有些Message并不是马上被处理的，在Message中存在一个Target，是Handler的一个引用，如果Message在Handler中的存在时间过长，会导致Handler无法被回收。如果Handler非静态，则会导致相关引用的Activity或者Service不会回收，所以在处理Hanlder之类的内部类的时候，应该要将Handler定义为静态内部类，同样在使用HandlerThread的时候也需要注意，我们来看看代码：&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;class&amp;nbsp;MainActivity&amp;nbsp;extends&amp;nbsp;AppCompatActivity{

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;void&amp;nbsp;onCreate(Bundle&amp;nbsp;savedInstanceState){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.onCreate(savedInstanceState);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setContentView(R.layout.activity_main);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HandlerThread&amp;nbsp;mThread&amp;nbsp;=&amp;nbsp;new&amp;nbsp;HandlerThread(&amp;quot;threadTask&amp;quot;,Process.THREAD_PROIORITY_BACKGROUND);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mThread.start();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Handler&amp;nbsp;mHander&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Handler(mThread.getLooper());
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//TODO...
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p&gt;这个代码存在泄漏问题，因为HandlerThread内部会不断的循环执行，它不会自己结束，线程的生命周期超过了activity生命周期，当横竖屏切换，HandlerThread线程的数量会随着activity重建次数的增加而增加。&lt;/p&gt;&lt;p&gt;我们应该在onDestroy时将线程停止掉：mThread.getLooper().quit();&lt;/p&gt;&lt;p&gt;另外，对于不是HandlerThread的线程，也应该确保activity消耗后，线程已经终止，可以这样做：在onDestroy时调用mThread.join();&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;strong&gt;、使用非静态内部类的静态实例&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;class&amp;nbsp;MainActivity&amp;nbsp;extends&amp;nbsp;AppCompatActivity{

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;class&amp;nbsp;OtherClass{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;OtherClass&amp;nbsp;sInstance&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;void&amp;nbsp;onCreate(Bundle&amp;nbsp;savedInstanceState){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.onCreate(savedInstanceState);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setContentView(R.layout.activity_main);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(sInstance&amp;nbsp;==&amp;nbsp;null){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sInstance&amp;nbsp;=&amp;nbsp;new&amp;nbsp;OtherClass();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p&gt;上面的代码中的sInstance实例类型为静态实例，在第一个MainActivityact实例创建时，sInstance会获得并一直持有activity的引用。当MainAcitivity销毁后重建，因为sInstance持有activity的引用，所以activity是无法被GC回收的，进程中会存在2个MainActivity实例（activity和重建后的MainActivity实例），这个activity对象就是一个无用的但一直占用内存的对象，即无法回收的垃圾对象。所以，对于lauchMode不是singleInstance的Activity，应该避免在activity里面实例化其非静态内部类的静态实例。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;strong&gt;、在Activity&lt;/strong&gt;&lt;strong&gt;中使用静态成员&lt;/strong&gt;&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;class&amp;nbsp;MainActivity&amp;nbsp;extends&amp;nbsp;AppCompatActivity{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;Drawable&amp;nbsp;sBackground&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected&amp;nbsp;void&amp;nbsp;onCreate(Bundle&amp;nbsp;savedInstanceState){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.onCreate(savedInstanceState);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setContentView(R.layout.activity_main);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;TextView&amp;nbsp;label&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TextView(this);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(sBackground&amp;nbsp;==&amp;nbsp;null){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sBackground&amp;nbsp;=&amp;nbsp;getDrawable(R.mipmap.ic_launcher);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;label.setBackgroundDrawable(sBackground);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p&gt;由于用静态成员sBackground 缓存了drawable对象，所以activity加载速度会加快，但是这样做是错误的。因为它会导致activity销毁后无法被系统回收。label.setBackgroundDrawable函数调用会将label赋值给sBackground的成员变量。上面代码意味着：sBackground（GC Root）会持有TextView对象，而TextView持有Activiy对象。所以导致Activity对象无法被系统回收。&lt;/p&gt;&lt;p&gt;以上2个例子的内存泄漏都是因为Activity的引用的生命周期超越了activity对象的生命周期。也就是常说的Context泄漏，想要避免context相关的内存泄漏，需要注意以下几点：&lt;/p&gt;&lt;p&gt;l 不要对activity的context长期引用(activity的引用的生存周期应该和activity的生命周期相同)&lt;/p&gt;&lt;p&gt;l 在可以使用application的context的情况下，尽可能使用application的context来替代和activity相关的context&lt;/p&gt;&lt;p&gt;l 如果一个acitivity的非静态内部类的生命周期不受控制，那么我们就应该避免这样使用。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;strong&gt;、注册某个对象后未注销&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;注册广播接收器、注册观察者等等，比如： 在调用registerReceiver后，若未调用unregisterReceiver，它会导致BroadcastReceiver不会被unregister而导致内存泄露，我们经常会看到类似下面的代码：&lt;/p&gt;&lt;pre&gt;registerReceiver(new&amp;nbsp;BroadcastReceiver(){

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;onReceive(Context&amp;nbsp;context,Intent&amp;nbsp;intent){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//TODO...
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

},filter);&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;strong&gt;、集合中对象没清理造成的内存泄露&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;我们通常把一些对象的引用加入到了集合中，当我们不需要该对象时，如果没有把它的引用从集合中清理掉，这样这个集合就会越来越大。如果这个集合是static的话，如果对象不断增大，达到一定的值的时候程序就会OOM&lt;/p&gt;&lt;p&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;strong&gt;、资源对象没关闭造成的内存泄露&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;资源性对象比如(Cursor，File文件等)往往都用了一些缓冲，我们在不使用的时候，应该及时关闭它们，以便它们的缓冲及时回收内存。它们的缓冲不仅存在于Java虚拟机内，还存在于Java虚拟机外。如果我们仅仅是把它的引用设置为null,而不关闭它们，往往会造成内存泄露。因为有些资源性对象，比如SQLiteCursor(在析构函数finalize(),如果我们没有关闭它，它自己会调close()关闭)，如果我们没有关闭它，系统在回收它时也会关闭它，但是这样的效率太低了。因此对于资源性对象在不使用的时候，应该立即调用它的close()函数，将其关闭掉，然后再置为null.在我们的程序退出时一定要确保我们的资源性对象已经关闭。&lt;/p&gt;&lt;p&gt;程序中经常会进行查询数据库的操作，但是经常会有使用完毕Cursor后没有关闭的情况。如果我们的查询结果集比较小，对内存的消耗不容易被发现，只有在长时间大量操作的情况下才会复现内存问题，这样就会给以后的测试和问题排查带来困难和风险。&lt;/p&gt;&lt;p&gt;写代码时，经常会有人忘记调用close, 或者因为代码逻辑问题状况导致close未被调用。&lt;/p&gt;&lt;p&gt;错误的代码：&lt;/p&gt;&lt;pre&gt;try{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Cursor&amp;nbsp;c&amp;nbsp;=&amp;nbsp;queryCursor();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;a&amp;nbsp;=&amp;nbsp;c.getInt(2);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.close();
}catch(Exception&amp;nbsp;ex){

}&lt;/pre&gt;&lt;p&gt;修正后的代码：&lt;/p&gt;&lt;pre&gt;Cursor&amp;nbsp;c&amp;nbsp;=&amp;nbsp;null;
try{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c&amp;nbsp;=&amp;nbsp;queryCursor();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int&amp;nbsp;a&amp;nbsp;=&amp;nbsp;c.getInt(2);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.close();
}catch(Exception&amp;nbsp;ex){

}finally{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(c!=null){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.close();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;strong&gt;、一些不良代码成内存压力&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;有些代码并不造成内存泄露，但是它们或是对没使用的内存没进行有效及时的释放，或是没有有效的利用已有的对象而是频繁的申请新内存，对内存的回收和分配造成很大影响的，容易迫使虚拟机不得不给该应用进程分配更多的内存，增加vm的负担，造成不必要的内存开支。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;7.1&lt;/strong&gt; &lt;strong&gt;Bitmap&lt;/strong&gt;&lt;strong&gt;使用不当&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;一、需要及时的销毁。&lt;/p&gt;&lt;p&gt;虽然，系统能够确认Bitmap分配的内存最终会被销毁，但是由于它占用的内存过多，所以很可能会超过Java堆的限制。因此，在用完Bitmap时，要及时的recycle掉。recycle并不能确定立即就会将Bitmap释放掉，但是会给虚拟机一个暗示：“该图片可以释放了”。&lt;/p&gt;&lt;p&gt;二、需要设置一定的采样率。&lt;/p&gt;&lt;p&gt;有时候，我们要显示的区域很小，没有必要将整个图片都加载出来，而只需要记载一个缩小过的图片，这时候可以设置一定的采样率，那么就可以大大减小占用的内存。如下面的代码：&lt;/p&gt;&lt;pre&gt;BitmapFactory.Options&amp;nbsp;options&amp;nbsp;=&amp;nbsp;new&amp;nbsp;BitmapFactory.Options();
options.inSampleSize&amp;nbsp;=&amp;nbsp;2;&amp;nbsp;//图片宽高都为原来的二分之一，图片为原来的额四分之一
Bitmap&amp;nbsp;bitmap&amp;nbsp;=&amp;nbsp;BitmapFactory.decodeStream(is,null,options);&lt;/pre&gt;&lt;p&gt;三、巧妙的运用软引用（SoftRefrence）&lt;/p&gt;&lt;p&gt;有些时候，我们使用Bitmap后没有保留对它的引用，因此就无法调用Recycle函数。这时候巧妙的运用软引用，可以使Bitmap在内存不足时得到有效的释放。如下：&lt;/p&gt;&lt;pre&gt;SoftReference&amp;lt;Bitmap&amp;gt;&amp;nbsp;bitmap_ref&amp;nbsp;=&amp;nbsp;new&amp;nbsp;SoftReference&amp;lt;Bitmap&amp;gt;(BitmapFactory.decodeStream(is));
if(bitmap_ref.get()!=null){
&amp;nbsp;&amp;nbsp;&amp;nbsp;bitmap_ref.get().recycle();&amp;nbsp;
}&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;7.2&lt;/strong&gt;&lt;strong&gt;使用Adapter&lt;/strong&gt;&lt;strong&gt;时，没有使用缓存的 ConvertView&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;　　以构造ListView的BaseAdapter为例，在BaseAdapter中提共了方法：&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;View&amp;nbsp;getView(int&amp;nbsp;position,View&amp;nbsp;convertView,ViewGroup&amp;nbsp;parent){}&lt;/pre&gt;&lt;p&gt;　　来向ListView提供每一个item所需要的view对象。初始时ListView会从BaseAdapter中根据当前的屏幕布局实例化一定数量的view对象，同时ListView会将这些view对象缓存起来。当向上滚动ListView时，原先位于最上面的list item的view对象会被回收，然后被用来构造新出现的最下面的list item。这个构造过程就是由getView()方法完成的，getView()的第二个形参 View convertView就是被缓存起来的list item的view对象(初始化时缓存中没有view对象则convertView是null)。&lt;/p&gt;&lt;p&gt;　　由此可以看出，如果我们不去使用convertView，而是每次都在getView()中重新实例化一个View对象的话，即浪费时间，也造成内存垃圾，给垃圾回收增加压力，如果垃圾回收来不及的话，虚拟机将不得不给该应用进程分配更多的内存，造成不必要的内存开支。ListView回收list item的view对象的过程可以查看:&lt;/p&gt;&lt;p&gt;android.widget.AbsListView.Java&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;addScrapView&amp;nbsp;(View&amp;nbsp;scrap&amp;nbsp;,int&amp;nbsp;position)&lt;/pre&gt;&lt;p&gt;错误的代码：&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;View&amp;nbsp;getView&amp;nbsp;(int&amp;nbsp;position&amp;nbsp;,&amp;nbsp;View&amp;nbsp;convertView,ViewGroup&amp;nbsp;parent){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;View&amp;nbsp;&amp;nbsp;view&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TextView(this);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;view;
}&lt;/pre&gt;&lt;p&gt;修正示例代码：&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;View&amp;nbsp;getView&amp;nbsp;(int&amp;nbsp;position&amp;nbsp;,&amp;nbsp;View&amp;nbsp;convertView,ViewGroup&amp;nbsp;parent){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;View&amp;nbsp;view&amp;nbsp;=&amp;nbsp;null;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(convertView&amp;nbsp;!=null){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;view&amp;nbsp;=(View)convertView.getTag();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&amp;nbsp;else&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;view&amp;nbsp;=&amp;nbsp;new&amp;nbsp;TextView(this);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;convertView.setTag(view);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;view;
}&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;7.3&lt;/strong&gt;&lt;strong&gt;适当的使用对象池&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;不要在经常调用的方法中创建对象，每次new之后都丢弃，尤其是忌讳在循环中创建对象。在android support v4包中包含Pools类，其实就是对象池，使用方法也比较简单，具体可以参考下面的MyPools这个类。&lt;/p&gt;&lt;pre&gt;public&amp;nbsp;class&amp;nbsp;MyPools{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private&amp;nbsp;static&amp;nbsp;final&amp;nbsp;Pools.SynchronizedPool&amp;lt;MyPools&amp;gt;&amp;nbsp;sPool&amp;nbsp;=&amp;nbsp;new&amp;nbsp;Pools.SynchronizedPool&amp;lt;MyPools&amp;gt;(10);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;static&amp;nbsp;MyPools&amp;nbsp;obtain(){&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;MyPools&amp;nbsp;instance&amp;nbsp;=&amp;nbsp;sPool.acquire();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return&amp;nbsp;(instance&amp;nbsp;!=&amp;nbsp;null)?instance&amp;nbsp;:new&amp;nbsp;MyPools();
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public&amp;nbsp;void&amp;nbsp;recycle(){
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sPool.release(this);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}

}&lt;/pre&gt;</content>
        <tag>Android内存泄露</tag>
        <pubTime>2015-12-06T09:43:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/5f65f7cd-cbfb-478d-a5c8-a74a00e27c24.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/6753e518-a8b8-4657-b7e5-a74a00e11e9a</loc>
    <lastmod>2015-10-24</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>抓取RTMP视频&amp;音频数据</title>
        <content>&lt;p style="text-align: left;"&gt;需要的工具：抓包工具（这里我使用的是WireShark）、Rtmpdump&lt;/p&gt;&lt;p style="text-align: left;"&gt;一开始我思路是想分析下html查看下是否有直接的下载地址：&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/12167a20-a71a-4659-a4de-a74a00e09b93.png" width="600" height="306" border="0" vspace="0" title="" alt="" style="width: 600px; height: 306px;"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;查询到了meta.xml,在里面发现了stream的path，这时候发现是rtmp的无法直接下载， 于是想到使用WireShark工具抓包,利用meta.xml里面的 cp11276.edgefcs.net/ondemand ，首先ping 获取ip&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/0811575f-e5a3-4c63-9b39-a74a00e09c80.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;得到96.17.102.28，通过过滤ip得到下面rtmp的信息&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/087f25fa-f0bd-45e4-94d2-a74a00e09cee.png" width="600" height="132" border="0" vspace="0" title="" alt="" style="width: 600px; height: 132px;"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;url:&lt;/p&gt;&lt;blockquote style="text-align: left;"&gt;&lt;p style="text-align: left;"&gt;rtmp://96.17.102.28/ondemand?_fcs_vhost=cp11276.edgefcs.net&lt;br style="text-align: left;"/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;path:&lt;/p&gt;&lt;blockquote style="text-align: left;"&gt;&lt;p style="text-align: left;"&gt;mp3:media.thomson-webcast.net/index=/1/4/2/5/3/3/6/2/0/0/~/m/instances/8qfcz37z/items/5wurmfcb/clips/dvzgs4dr/0/clip?itemview=b8cchdaae5q3bafgzebcqk55w55m2g4sqc2f68z2nckpafpx_105059808&amp;amp;mmc_installation=mmc_production&amp;amp;mmc_installation_type=prod&lt;br style="text-align: left;"/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;在RtmpDump下面执行&lt;/p&gt;&lt;blockquote style="text-align: left;"&gt;&lt;p style="text-align: left;"&gt;rtmpdump -r &amp;quot;rtmp://96.17.102.28/ondemand?_fcs_vhost=cp11276.edgefcs.net&amp;quot; -y &amp;quot;mp3:media.thomson-webcast.net/index=/1/4/2/5/3/3/6/2/0/0/~/m/instances/8qfcz37z/items/5wurmfcb/clips/dvzgs4dr/0/clip?itemview=b8cchdaae5q3bafgzebcqk55w55m2g4sqc2f68z2nckpafpx_105059808&amp;amp;mmc_installation=mmc_production&amp;amp;mmc_installation_type=prod&amp;quot; -o webcast.mp3&lt;br style="text-align: left;"/&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/cdabdd3b-501e-4f63-a123-a74a00e09d33.png"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;下载成功得到webcast.mp3&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://cdn.datiancun.com/465e243a-0ec5-4c71-adfb-a74a00e09d54.png"/&gt;&lt;/p&gt;</content>
        <tag>RTMP</tag>
        <pubTime>2015-10-24T09:38:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/9077c951-8863-48e0-b9a7-a74a00e1101a.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/e45cb95b-6260-40f7-863a-a74a0121a9db</loc>
    <lastmod>2015-10-14</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>在UWP应用中实现Gif播放</title>
        <content>&lt;p&gt;众所周知，在UWP应用框架中，Image控件是无法播放GIF的图片，只能显示静态图，这样的体验不是特别友好。我在Win8、WP8.1的时候实现过gif播放功能，但是最近发现性能和播放效果都差强人意，大家可以看我的贴吧应用，目前还是用我以前写的gif控件，一些图片播放效果并不是很正确，或者内存消耗过高，主要原因是因为只对gif每帧做了简单的处理。&lt;/p&gt;&lt;pre&gt;var&amp;nbsp;frame&amp;nbsp;=&amp;nbsp;await&amp;nbsp;decoder.GetFrameAsync(frameIndex).AsTask(token);

var&amp;nbsp;writeableBitmap&amp;nbsp;=&amp;nbsp;new&amp;nbsp;WriteableBitmap((int)decoder.OrientedPixelWidth,&amp;nbsp;(int)decoder.OrientedPixelHeight);

BitmapFrame&amp;nbsp;bframe&amp;nbsp;=&amp;nbsp;await&amp;nbsp;decoder.GetFrameAsync(frameIndex).AsTask(token);

TimeSpan&amp;nbsp;delay&amp;nbsp;=&amp;nbsp;TimeSpan.Zero;

BitmapPropertySet&amp;nbsp;bitmapPropertySet&amp;nbsp;=
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;await&amp;nbsp;bframe.BitmapProperties.GetPropertiesAsync(new&amp;nbsp;List&amp;lt;string&amp;gt;()).AsTask(token);

if&amp;nbsp;(bitmapPropertySet&amp;nbsp;!=&amp;nbsp;null)
{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;BitmapPropertySet&amp;nbsp;delayPropertySet&amp;nbsp;=&amp;nbsp;await&amp;nbsp;(bitmapPropertySet[&amp;quot;/grctlext&amp;quot;].Value
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;as&amp;nbsp;BitmapPropertiesView).GetPropertiesAsync(new&amp;nbsp;List&amp;lt;string&amp;gt;&amp;nbsp;{&amp;nbsp;&amp;quot;/Delay&amp;quot;,&amp;nbsp;});

&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if&amp;nbsp;(delayPropertySet&amp;nbsp;!=&amp;nbsp;null)
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;delay&amp;nbsp;=&amp;nbsp;TimeSpan.FromSeconds(double.Parse(delayPropertySet[&amp;quot;/Delay&amp;quot;].Value.ToString())&amp;nbsp;/&amp;nbsp;100.0);
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
}

if&amp;nbsp;(delay.Equals(TimeSpan.Zero))
{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;delay&amp;nbsp;=&amp;nbsp;DefaultDelay;
}

var&amp;nbsp;bitmapTransform&amp;nbsp;=&amp;nbsp;new&amp;nbsp;BitmapTransform();
var&amp;nbsp;pixelDataProvider&amp;nbsp;=&amp;nbsp;await&amp;nbsp;frame.GetPixelDataAsync(BitmapPixelFormat.Bgra8,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;decoder.BitmapAlphaMode,&amp;nbsp;bitmapTransform,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ExifOrientationMode.IgnoreExifOrientation,&amp;nbsp;ColorManagementMode.DoNotColorManage);
var&amp;nbsp;pixels&amp;nbsp;=&amp;nbsp;pixelDataProvider.DetachPixelData();

using&amp;nbsp;(var&amp;nbsp;bitmapStream&amp;nbsp;=&amp;nbsp;writeableBitmap.PixelBuffer.AsStream())
{
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;bitmapStream.Write(pixels,&amp;nbsp;0,&amp;nbsp;pixels.Length);
}&lt;/pre&gt;&lt;p&gt;这段代码，可以看出解析gif每帧没有对gif的参数做处理，只处理了delay属性，也就是每帧的播放间隔（这个播放间隔有个比较吭的地方，如果delay为zero一般来说需要加上100毫秒，用于做间隔，否则gif会播放的过快），但是没对其他的图片属性做处理，导致一些gif样式错误，但是这样的实现相对来说比较简单，性能效率什么的会更高，而且能适应大部分的gif播放，所以之前做了一些取舍。&lt;/p&gt;&lt;p&gt;时过境迁，前一段时间知道微软发布了win2d的图形加速引擎后，就特别感兴趣，看到微软用win2d实现了gif的播放demo，做了一些研究，将微软的播放demo做了一些改进，开发了uwp的图片框架&lt;a href="https://github.com/chenrensong/ImageLib.UWP" target="_blank"&gt;ImageLib.UWP&lt;/a&gt;,该项目已经发布到Github中（&lt;a href="https://github.com/chenrensong/ImageLib.UWP" target="_blank"&gt;https://github.com/chenrensong/ImageLib.UWP&lt;/a&gt;），同时也在nuget上发布了最新版本，大家可以通过&lt;/p&gt;&lt;pre&gt;Install-Package&amp;nbsp;ImageLib.UWP&lt;/pre&gt;&lt;p&gt;命令来安装。&lt;/p&gt;&lt;p&gt;ImageLib.UWP支持几乎所有的uri格式，借鉴了众多图片框架的优势，支持扩展图片解析器，这部分大家可以在demo中看到，本文暂时不介绍具体的实现原理，下一次我会和大家详细介绍，如果在使用中遇到问题，欢迎留言。&lt;/p&gt;</content>
        <tag>UWP</tag>
        <pubTime>2015-10-14T01:33:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/b9f1003a-5ff6-40a6-9404-a74a01218262.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/cdc9a942-876f-4c8e-9105-a74a00e5d115</loc>
    <lastmod>2015-07-02</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>Win10中使用File Transfer Manager下载MSDN资源</title>
        <content>&lt;p style="text-align: left;"&gt;FTM是微软MSDN专用的下载工具，微软发布了Visual Studio 2015 pre-RTM，目前通过FTM下载比较快速，但是在Windows10上无法直接使用，必须到安装目录，用带有管理员权限的CMD执行：&lt;/p&gt;&lt;blockquote style="text-align: left;"&gt;&lt;p style="text-align: left;"&gt;regsvr32 grTransferCtrl.dll&lt;/p&gt;&lt;p style="text-align: left;"&gt;regsvr32 grTransferMgr.dll&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="text-align: left;"&gt;重新打开IE，如果发现还是不能使用，只能下到download.dlm文件的话，说明还没成功，那就要将download.dlm文件放入下列地址即可&amp;nbsp;%UserProfile%\Application Data\Microsoft\File Transfer Manager\RequestQueue这个目录&lt;/p&gt;&lt;p style="text-align: left;"&gt;在我机器上是C:\Users\chenrensong\AppData\Roaming\Microsoft\File Transfer Manager\RequestQueue，关闭FTM,把上面的download.dlm放入上述文件夹，然后启动FTM。弹出了下载设置界面，就可以成功下载VS2015 pre-RTM了。&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;img src="http://cdn.datiancun.com/00b26a55-a7c1-4a40-8c08-a74a00e57617.png" width="600" height="339" border="0" vspace="0" title="" alt="" style="width: 600px; height: 339px;"/&gt;&lt;/p&gt;</content>
        <tag>Windows</tag>
        <pubTime>2015-07-02T09:56:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/1c390031-88cd-460e-8f1d-a74a00e5ca37.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/cbf44fae-2285-493d-ba24-a74a00e335e1</loc>
    <lastmod>2014-09-24</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>ubuntu14.04 配置jdk1.7</title>
        <content>&lt;h3 id="第一步下载jdk-7-linux-i586.tar.gz"&gt;第一步：下载jdk-7-linux-i586.tar.gz&lt;/h3&gt;&lt;pre&gt;wget&amp;nbsp;-c&amp;nbsp;http://download.oracle.com/otn-pub/java/jdk/7/jdk-7-linux-i586.tar.gz&lt;/pre&gt;&lt;p&gt;&lt;code&gt;(注：如果下载不下来，建议使用迅雷下载，然后拷贝到Linux系统上。)&lt;/code&gt;&lt;/p&gt;&lt;h3 id="第二步解压安装"&gt;第二步：解压安装&lt;/h3&gt;&lt;pre&gt;sudo&amp;nbsp;mkdir&amp;nbsp;/usr/lib/jvm&lt;/pre&gt;&lt;pre&gt;sudo&amp;nbsp;tar&amp;nbsp;zxvf&amp;nbsp;jdk-7u5-linux-x64.tar.gz&amp;nbsp;-C&lt;/pre&gt;&lt;h3 id="第三步修改环境变量"&gt;第三步：修改环境变量&lt;/h3&gt;&lt;pre&gt;sudo&amp;nbsp;gedit&amp;nbsp;/etc/profile&lt;/pre&gt;&lt;p&gt;添加：&lt;/p&gt;&lt;pre&gt;set&amp;nbsp;java&amp;nbsp;environment
export&amp;nbsp;JAVA_HOME=/usr/lib/jvm/java-7-sun
export&amp;nbsp;JRE_HOME=${JAVA_HOME}/jre
export&amp;nbsp;CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib&amp;nbsp;
export&amp;nbsp;PATH=${JAVA_HOME}/bin:$PATH&lt;/pre&gt;&lt;p&gt;保存退出，输入以下命令使之立即生效。&lt;/p&gt;&lt;h3 id="第四步配置默认jdk版本"&gt;第四步：配置默认JDK版本&lt;/h3&gt;&lt;p&gt;为了将我们安装的JDK设置为默认JDK版本，还要进行如下工作。&lt;br/&gt;执行代码:&lt;/p&gt;&lt;pre&gt;sudo&amp;nbsp;update-alternatives&amp;nbsp;--install&amp;nbsp;/usr/bin/java&amp;nbsp;java&amp;nbsp;/usr/lib/jvm/java-7-sun/bin/java&amp;nbsp;300&lt;/pre&gt;&lt;pre&gt;sudo&amp;nbsp;update-alternatives&amp;nbsp;--install&amp;nbsp;/usr/bin/javac&amp;nbsp;javac&amp;nbsp;/usr/lib/jvm/java-7-sun/bin/javac&amp;nbsp;300&lt;/pre&gt;&lt;p&gt;执行代码：&lt;/p&gt;&lt;pre&gt;sudo&amp;nbsp;update-alternatives&amp;nbsp;--config&amp;nbsp;java&lt;/pre&gt;&lt;p&gt;系统会列出各种JDK版本，如下所示：&lt;/p&gt;&lt;pre&gt;chenrensong.com@linux:~$&amp;nbsp;sudo&amp;nbsp;update-alternatives&amp;nbsp;--config&amp;nbsp;java&amp;nbsp;&amp;nbsp;
有&amp;nbsp;3&amp;nbsp;个候选项可用于替换&amp;nbsp;java&amp;nbsp;(提供&amp;nbsp;/usr/bin/java)。&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;选择&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;路径&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;优先级&amp;nbsp;&amp;nbsp;状态&amp;nbsp;&amp;nbsp;
------------------------------------------------------------&amp;nbsp;&amp;nbsp;
*&amp;nbsp;0&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/usr/lib/jvm/java-6-openjdk/jre/bin/java&amp;nbsp;&amp;nbsp;&amp;nbsp;1061&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;自动模式&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;1&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/usr/lib/jvm/java-6-openjdk/jre/bin/java&amp;nbsp;&amp;nbsp;&amp;nbsp;1061&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;手动模式&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;2&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/usr/lib/jvm/java-6-sun/jre/bin/java&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;63&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;手动模式&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;3&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/usr/lib/jvm/java-7-sun/bin/java&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;300&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;手动模式&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
&amp;nbsp;&amp;nbsp;
要维持当前值[*]请按回车键，或者键入选择的编号：3&amp;nbsp;&amp;nbsp;
update-alternatives:&amp;nbsp;使用&amp;nbsp;/usr/lib/jvm/java-7-sun/bin/java&amp;nbsp;来提供&amp;nbsp;/usr/bin/java&amp;nbsp;(java)，于&amp;nbsp;手动模式&amp;nbsp;中。&lt;/pre&gt;&lt;h3 id="第五步测试"&gt;第五步：测试&lt;/h3&gt;&lt;pre&gt;java&amp;nbsp;-version&amp;nbsp;（会显示如下信息，说明已配置成功）
java&amp;nbsp;version&amp;nbsp;&amp;quot;1.7.0&amp;quot;
Java(TM)&amp;nbsp;SE&amp;nbsp;Runtime&amp;nbsp;Environment&amp;nbsp;(build&amp;nbsp;1.7.0-b147)
Java&amp;nbsp;HotSpot(TM)&amp;nbsp;Client&amp;nbsp;VM&amp;nbsp;(build&amp;nbsp;21.0-b17,&amp;nbsp;mixed&amp;nbsp;mode)&lt;/pre&gt;</content>
        <tag>jdkubuntu</tag>
        <pubTime>2014-09-24T09:46:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/994af517-0a92-47f3-8a02-a74a00e30650.png" />
      </display>
    </data>
  </url>
  <url>
    <loc>http://www.datiancun.com/post/a61f19fa-c79c-475a-9d4d-a74a0093bb37</loc>
    <lastmod>2014-05-28</lastmod>
    <changefreq>always</changefreq>
    <priority>1</priority>
    <data>
      <display>
        <title>MVVM的前世今生</title>
        <content>&lt;p style="text-align: left;"&gt;&lt;strong&gt;1、前言&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;近年来智能手机发展相对迅速，硬件配置也逐步提高，为了追求更丰富的用户体验。适应这种变化，在应用开发过程的分工要求更加细致，一部分人负责界面设计，一部分人负责业务逻辑设计。这种分工写作给设计模式带来新的要求，一方面要保持系统易于理解和维护、良好的扩展性和低耦合度，另外一方面要追求业务逻辑、呈现逻辑和UI逻辑的分离，使得界面设计和程序控制开发可以同步进行。目前在IOS ANDROID应用开发中，使用比较多的有MVC(Model-View-Controller)、MVP(Model-View-Presenter)等设计模式，但是这些模式并不能完全将UI设计分离。为此将呈现逻辑从视图中独立出来，同时将界面数据从模型中独立出来，组成视图模型(ViewModel)模块，形成了MVVM(Model-View-ViewModel)模型，我们可以认为MVVM是MVC、MVP这类架构的变种。MVVM模式不但能够实现UI设计的分离，而且能充分发挥RIA技术中的数据绑定的技术和特点，提高软件的复用性。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;2、MVVM的诞生：&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;微软的WPF发布带来了新的技术体验，如Sliverlight、音频、视频、3D、动画……，这导致了软件UI层更加细节化、可定制化。同时，在技术层面，WPF也带来了 诸如Binding、Dependency Property、Routed Events、Command、DataTemplate、ControlTemplate等新特性。MVVM（Model-View-ViewModel）框架的由来便是MVP（Model-View-Presenter）模式与WPF结合的应用方式时发展演变过来的一种新型架构框架。它立足于原有MVP框架并且把WPF的新特性揉合进去，以应对客户日益复杂的需求变化。&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;3、MVVM的简介:&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;MVVM模式是Model-View-ViewMode模式的简称。由视图(View)、视图模型(ViewModel)、模型(Model)三部分组成，结构如下图。通过这三部分实现UI逻辑、呈现逻辑和状态控制、数据与业务逻辑的分离。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/4b7e895c-fe14-49fa-a437-a74a00936316.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;图1:MVVM模式架构图&lt;/p&gt;&lt;p style="text-align: left;"&gt;使用MVVM模式有几大好处：&lt;/p&gt;&lt;p style="text-align: left;"&gt;1.&amp;nbsp;低耦合。View可以独立于Model变化和修改，一个ViewModel可以绑定到不同的View上，当View变化的时候Model可以不变，当Model变化的时候View也可以不变。&lt;/p&gt;&lt;p style="text-align: left;"&gt;2.&amp;nbsp;可复用性。可以把一些视图的逻辑放在ViewModel里面，让很多View重用这段视图逻辑。&lt;/p&gt;&lt;p style="text-align: left;"&gt;3.&amp;nbsp;独立开发。开发人员可以专注与业务逻辑和数据的开发(ViewModel)。设计人员可以专注于界面(View)的设计。&lt;/p&gt;&lt;p style="text-align: left;"&gt;4.&amp;nbsp;可测试性。可以针对ViewModel来对界面(View)进行测试&lt;/p&gt;&lt;p style="text-align: left;"&gt;&lt;strong&gt;4、M-V-VM的职责:&lt;/strong&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;1. 模型(Model)&lt;/p&gt;&lt;p style="text-align: left;"&gt;Model与MVC模式一样，Model用于封装与应用程序的业务逻辑相关的数据以及对数据的处理方法。它具有对数据直接访问的权利，例如对数据库的访问，Model不依赖于View和ViewModel，也就是说，模型不关心会被如何显示或是如何被操作，模型也不能包含任何用户使用的与界面相关的逻辑。Model在实际开发中根据实际情况可以进行细分。比如在广州市城乡规划资源平台就将Model将Service和Reposiroty结合为WCF服务由ViewModel进行调用。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/75238f8a-cf0b-4fb3-ac51-a74a00936358.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;图2 Model的细分层次关系&lt;/p&gt;&lt;p style="text-align: left;"&gt;2. 视图(View)&lt;/p&gt;&lt;p style="text-align: left;"&gt;View负责界面展示。它通过DataContext(数据上下文)和ViewModel进行数据绑定，不直接与Model做任何交互。 可以绑定Behavior/Comand/Trigger/Action来调用ViewModel的方法，Command是View到ViewModel的单向通行，通过实现.Net提供的IComand接口来实现绑定，让View触发事件，ViewModel来处理事件，来解决事件绑定功能。&lt;/p&gt;&lt;p style="text-align: left;"&gt;3. 视图模型(ViewModel)&lt;/p&gt;&lt;p style="text-align: left;"&gt;ViewModel主要包括界面逻辑和模型数据封装，Behavior/Comand/Trigger/Action事件响应处理，绑定属性定义和集合等。它是View和Model的桥梁，是对Model的抽象，比如：Model中数据格式是Boolean，可以在ViewModel中转换Model的数据为“开” or “关”供View显示。&lt;/p&gt;&lt;p style="text-align: left;"&gt;实现视图模型需要实现.Net提供的接口INotifyPropertyChanged、INotifyPropertyChanged、INotifyCollectionChanged接口用于实现属性和集合的变更通知。使得在用户在视图上所做的操作都可以实时通知到视图模型，从而让视图模型对象有的模型进行正确的业务操作。&lt;/p&gt;&lt;p style="text-align: left;"&gt;通常情况下在Code-Behind部分可能包含界面逻辑或者应用逻辑的代码，这些代码会很难进行单元测试，应根据具体情况尽量避免。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/86959acd-25db-4e35-b34f-a74a0093639c.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;图3:View、ViewModel和Model的交互图&lt;/p&gt;&lt;p style="text-align: left;"&gt;对不同View、ViewModel之间的参数传递，一般通过消息实现数据传递，也可以定义全局静态变量来进行数据共享，在MVVM里，我们可以使用Mediator模式(中介者模式)进行跟优雅的处理。可以简单得理解为不同的ViewModel或者View需要进行了操作之后，需要其他ViewModel或者View进行相应的其他操作或者数据更新，而中介类可以准确得将更新准确得通知到正确的ViewModel，同时中介者并不关心ViewModel或者View的任何操作或者数据更新。&lt;/p&gt;&lt;p style="text-align:center"&gt;&lt;img src="http://cdn.datiancun.com/4be866b0-9b8e-4d6e-ae79-a74a009363cb.jpg"/&gt;&lt;/p&gt;&lt;p style="text-align: left;"&gt;图4 ViewModel通过Mediator模式与其他ViewModel的交互图&lt;/p&gt;&lt;p&gt;&lt;br style="text-align: left;"/&gt;&lt;/p&gt;</content>
        <tag>MVVM</tag>
        <pubTime>2014-05-28T04:57:00</pubTime>
        <breadCrumb title="大田村" url="http://www.datiancun.com" />
        <thumbnail loc="http://cdn.datiancun.com/3f91ee53-089b-4abc-b94d-a74a0093b628.png" />
      </display>
    </data>
  </url>
</urlset>