@using System.Collections.Generic;
@using OneBlog.Core.Web.Extensions;
@using System.Web.Mvc;
@using System.Web.Mvc.Html;
@model string
@{
    string ExtensionName = ViewBag.ExtensionName;
    string SettingName = Model;
    if (string.IsNullOrEmpty(ExtensionName))
    {
        ExtensionName = SettingName;
    }
    var Settings = ExtensionManager.GetSettings(ExtensionName, SettingName);
    var GenerateDeleteButton = Settings.ShowDelete;
    var GenerateEditButton = Settings.ShowEdit;
}
<h4>@SettingName @Resources.labels.settings </h4>
<div id="ErrorMsg" style="color:Red; padding:5px 0 5px 0; display:block;"></div>
<div id="InfoMsg" style="color:Green; padding:5px 0 5px 0; display:block;">@ViewBag.InfoMsg</div>
@if (!string.IsNullOrEmpty(Settings.Help))
{
    <div class="alert alert-info">@Html.Raw(Settings.Help)</div>
}


@using (Html.BeginForm("Extensions", "Admin", new { ext = ExtensionName }, FormMethod.Post))
{
    if (Settings.ShowAdd)
    {
        @Html.Hidden("settingName", SettingName);
        @*@Html.Hidden("extensionName", ExtensionName);*@

        foreach (ExtensionParameter par in Settings.Parameters)
        {
            // add label
            if (par.ParamType != ParameterType.Boolean)
            {
                @Html.Label(par.Label, labelText: par.Label);
            }

            if (par.ParamType == ParameterType.Boolean)
            {
                // add checkbox
                @:<br />
                bool value = false;
                if (par.Values != null && par.Values.Count > 0)
                {
                    value = bool.Parse(par.Values[0]);
                }

                @Html.CheckBox(par.Name, value, new { @class = "mgrCheck", width = 250 });
                @Html.Label(par.Label, new { @class = "mgrCheckLbl", width = 250 });
            }
            else if (par.ParamType == ParameterType.DropDown)
            {
                // add dropdown
                var dd = new List<SelectListItem>
                    ();
                foreach (var item in par.Values)
                {
                    string[] parts = item.Split('|');
                    SelectListItem li = new SelectListItem();
                    if (item == par.SelectedValue)
                    {
                        li.Selected = true;
                    }
                    li.Text = parts.Length == 1 ? parts[0] : parts[1];
                    li.Value = parts[0];

                    dd.Add(li);
                }
                @:<br />
                @Html.DropDownList(par.Name, dd, new { @class = "form-control", width = 250 });
            }
            else if (par.ParamType == ParameterType.ListBox)
            {

                var dd = new List<SelectListItem>
                    ();
                foreach (var item in par.Values)
                {
                    SelectListItem li = new SelectListItem();
                    if (item == par.SelectedValue)
                    {
                        li.Selected = true;
                    }
                    li.Text = item;
                    li.Value = item;
                    dd.Add(li);
                }
                @:<br />
                @Html.ListBox(par.Name, dd, new { @class = "form-control", width = 250 });
            }
            else if (par.ParamType == ParameterType.RadioGroup)
            {

                //var rbl = new RadioButtonList();

                var dd = new List<SelectListItem>
                    ();
                foreach (var item in par.Values)
                {
                    SelectListItem li = new SelectListItem();
                    if (item == par.SelectedValue)
                    {
                        li.Selected = true;
                    }
                    li.Text = item;
                    li.Value = item;
                    dd.Add(li);
                }
                @:<br />
                @Html.RadioButtonList(par.Name, dd, new { @class = "form-mgrRadioList", width = 250 });
            }
            else
            {
                @:<br />
            // add textbox
                var value = "";
                if (par.Values != null)
                {
                    value = par.Values.Count == 0 ? string.Empty : par.Values[0];
                }

                @Html.TextBox(par.Name, value, new { @class = "form-control", width = 250, MaxLength = par.MaxLength });
            }
        }
    }


    <div style="margin: 10px 0; padding-bottom: 10px; border-bottom: 1px solid #ccc; display:block">
        <button class="btn btn-success btn-header">@Resources.labels.save</button>
    </div>

}